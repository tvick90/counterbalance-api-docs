{
  "openapi": "3.0.0",
  "info": {
    "title": "Equipment",
    "version": "1.0",
    "description": "The Equipment API provides endpoints for equipment and asset management, including:\n* Creating & managing site equipment nodes\n* Defining equipment hierarchy & node relationships\n* Attaching & managing equipment telemetry\n\n### Understanding Equipment Nodes \n An **Equipment Node** is a platform representation of a piece of physical equipment on-site, such as an air handler, chiller, or pump.\n\nEquipment node definition and taxonomy in Counterbalance is defined by the guidelines in [Project Haystack](https://project-haystack.org/).\n\n The top-level Haystack equipment tags currently supported are: `ahu`, `chilledWaterPlant`, `chiller`, `coolingTower`, `boiler`, `fan`, `heatExchanger`, `heatPump`, `hotWaterPlant`, `pump`, `vav`\n\n#### Equipment & Marker Tags\nEquipment nodes are defined using a top-level equipment tag and a variety of marker tags.  \n\n#### Parent/Child Relationships\nEquipment nodes can be defined to create a parent/child relationship that follows-that of the actual equipment onsite. Examples include an air handler that serves multiple VAV boxes or chilled water plant and its associated chillers, pumps, cooling towers, etc.\n\n##### Permitted Relationships\n\n| Parent Tag | Permitted Children Tags |\n|---|---|\n| `ahu` | `fan`, `vav`, `zone` |\n| `chilledWaterPlant` | `chiller`, `heatExchanger`, `pump`, `coolingTower` |\n| `hotWaterPlant` | `boiler`, `heatExchanger`, `pump` |\n\n#### Dependent Relationships\nEquipment nodes can also define dependent relationships between nodes. A dependent node is attached via a Haystack system reference (such as `chilledWaterPlantRef`, `hotWaterPlantRef`, etc). The available references for a particular equipment node are dictated by the Haystack tags assigned to the node.\n\nFor example, let's say you define an AHU with a `chilledWaterCool` marker tag. When this tag is assigned, the `chilledWaterPlantRef` reference also becomes available. If this references is attached to a chilled water plant node, this AHU will become dependent on the chilled water plant.\n\n> **Remember** Parent/child and dependent relationships are critical for accurate fault detectionand building intelligence routines. We highly recommend being as thorough and complete with these relationship definitions as possible.\n\n"
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    },
    {
      "description": "Dev API",
      "url": "https://api-dev.counterbalance.io"
    }
  ],
  "paths": {
    "/v1/equipment": {
      "get": {
        "summary": "List Equipment Nodes",
        "tags": [
          "Equipment"
        ],
        "responses": {},
        "operationId": "list-equipment",
        "description": ""
      },
      "post": {
        "summary": "Create Equipment Node",
        "operationId": "create-equipment-node",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Create a new equipment node\n\n**Required Permissions:** `*`,`equipment:*`,`equipment:node:*`,`equipment:node:read`\n\n> **Heads Up** This endpoint is subject to `equipment` quota availabilty",
        "tags": [
          "Equipment"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A name for the new node"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the equipment"
                  },
                  "tag": {
                    "type": "string",
                    "description": "A top-level Haystack equipment tag"
                  },
                  "markers": {
                    "type": "string",
                    "description": "A space-seperated list of marker tags"
                  },
                  "@parent": {
                    "type": "string",
                    "description": "The parent equipment node of this node",
                    "format": "uuid"
                  },
                  "@site": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "User-defined JSON data for this node"
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "tag"
                ]
              },
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Equipment-Node-Body"
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/v1/equipment/node/{nodeId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/nodeId"
        }
      ],
      "get": {
        "summary": "Get Equipment Node",
        "tags": [
          "Equipment"
        ],
        "operationId": "get-equipment-node",
        "description": "### Synopsis\nRetrieve the specified equipment node\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`equipment:*`,`equipment:node:*`,`equipment:node:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Equipment-Node-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Equipment-Node-Not-Found"
          }
        }
      },
      "patch": {
        "summary": "Update Equipment Node",
        "operationId": "update-equipment-node",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Equipment Nodes"
        ],
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Equipment Node",
        "operationId": "delete-equipment-node",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Equipment"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Equipment-Node-Object": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "@site": {
            "type": "string",
            "minLength": 1
          },
          "@floor": {},
          "@room": {},
          "@parent": {},
          "references": {
            "type": "object",
            "properties": {
              "": {
                "type": "object"
              }
            }
          },
          "haystack": {
            "type": "object",
            "required": [
              "equipment",
              "marker",
              "available_references"
            ],
            "properties": {
              "equipment": {
                "type": "object",
                "required": [
                  "tag",
                  "name",
                  "description",
                  "parent_ref",
                  "permitted_children_equipment"
                ],
                "properties": {
                  "tag": {
                    "type": "string",
                    "minLength": 1
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "parent_ref": {
                    "type": "string",
                    "minLength": 1
                  },
                  "permitted_children_equipment": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "marker": {
                "type": "object",
                "required": [
                  "tags",
                  "tags_string",
                  "tag_definitions"
                ],
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags_string": {
                    "type": "string",
                    "minLength": 1
                  },
                  "tag_definitions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag-Definition-Object"
                    }
                  }
                }
              },
              "available_references": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "telemetry": {
            "type": "object",
            "required": [
              "relationship_count",
              "base",
              "via_markers",
              "all"
            ],
            "properties": {
              "relationship_count": {
                "type": "number"
              },
              "base": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "via_markers": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "all": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "@site",
          "references",
          "haystack",
          "metadata",
          "telemetry"
        ],
        "title": "Equipment Node Object"
      },
      "Tag-Definition-Object": {
        "description": "",
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "references": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "telemetry": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "references",
          "telemetry"
        ],
        "title": "Tag Definition Object"
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "nodeId": {
        "name": "nodeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid equipment node UUID"
      },
      "@ref": {
        "name": "@ref",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "74c8d53f-d657-49ab-8240-532645628839"
        },
        "description": "Filter results by their parent or dependent node UUID"
      },
      "@siteId": {
        "name": "@site",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3"
        },
        "description": "Filter results by their associated site UUID"
      },
      "tag": {
        "name": "tag",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filter results by their Haystack equipment tag"
      }
    },
    "responses": {
      "200-Equipment-Node-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Equipment-Node-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Equipment-Node-Object"
              }
            }
          }
        }
      },
      "404-Equipment-Node-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Equipment node not found",
                    "console": "Please check the node ID and try your request again",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "201-Equipment-Node-Created": {
        "description": "Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Equipment-Node-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Equipment-Node-Object"
              }
            }
          }
        }
      }
    },
    "examples": {
      "Equipment-Node-Object": {
        "value": {
          "id": "60ec71bc-5a72-4e29-9db8-87bb2097047c",
          "name": "AHU S2",
          "description": "Air Handler S2 - Low-Rise North",
          "@site": "723a9c16-1790-4386-b17b-54bc9ed6d901",
          "@floor": null,
          "@room": null,
          "@parent": null,
          "references": {
            "hotWaterPlantRef": null,
            "chilledWaterPlantRef": "74c8d53f-d657-49ab-8240-532645628839"
          },
          "haystack": {
            "equipment": {
              "tag": "ahu",
              "name": "Air Handler",
              "description": "An enclosure with a fan that delivers air to a space via ductwork and performs one or more of the functions of cleaning, heating, cooling, humidifying, dehumidifying, ventilating or circulating the air",
              "parent_ref": "ahuRef",
              "permitted_children_equipment": [
                "fan",
                "vav",
                "zone"
              ]
            },
            "marker": {
              "tags": [
                "hotWaterHeat",
                "chilledWaterCool",
                "variableVolume",
                "vavZone",
                "dualDuct"
              ],
              "tags_string": "hotWaterHeat chilledWaterCool variableVolume vavZone dualDuct",
              "tag_definitions": [
                {
                  "id": "hotWaterHeat",
                  "name": "Hot Water Heat",
                  "description": "The AHU utilizes a hot water heating coil",
                  "references": [
                    "hotWaterPlantRef"
                  ],
                  "telemetry": [
                    "heat valve cmd",
                    "heat valve sensor",
                    "heat circ pump cmd",
                    "heat circ pump sensor"
                  ]
                },
                {
                  "id": "chilledWaterCool",
                  "name": "Chilled Water Cooling",
                  "description": "The AHU utilizes a chilled water coil",
                  "references": [
                    "chilledWaterPlantRef"
                  ],
                  "telemetry": [
                    "cool valve cmd",
                    "cool valve sensor"
                  ]
                },
                {
                  "id": "variableVolume",
                  "name": "Variable Volume",
                  "description": "The AHU supplies a variable volume of air",
                  "references": [],
                  "telemetry": [
                    "discharge air fan speed cmd",
                    "discharge air fan speed sensor"
                  ]
                },
                {
                  "id": "vavZone",
                  "name": "VAV Zone",
                  "description": "The AHU supplies air to VAV terminal units",
                  "references": [],
                  "telemetry": []
                },
                {
                  "id": "dualDuct",
                  "name": "Dual Duct",
                  "description": "The AHU uses two ducts which is some combination of hotDeck, coldDeck, or neutralDeck",
                  "references": [],
                  "telemetry": [
                    "hotDeck air temp sensor",
                    "hotDeck air humidity sensor",
                    "hotDeck air pressure sensor",
                    "hotDeck air flow sensor",
                    "hotDeck air fan cmd",
                    "hotDeck air fan sensor",
                    "coldDeck air temp sensor",
                    "coldDeck air humidity sensor",
                    "coldDeck air pressure sensor",
                    "coldDeck air flow sensor",
                    "coldDeck air fan cmd",
                    "coldDeck air fan sensor",
                    "neutralDeck air temp sensor",
                    "neutralDeck air humidity sensor",
                    "neutralDeck air pressure sensor",
                    "neutralDeck air flow sensor",
                    "neutralDeck air fan cmd",
                    "neutralDeck air fan sensor"
                  ]
                }
              ]
            },
            "available_references": [
              "hotWaterPlantRef",
              "chilledWaterPlantRef"
            ]
          },
          "metadata": [],
          "telemetry": {
            "relationship_count": 0,
            "base": [
              "return air temp sensor",
              "return air humidity sensor",
              "return air pressure sensor",
              "return air flow sensor",
              "return air co2 sensor",
              "return air fan cmd",
              "return air damper cmd",
              "mixed air temp sensor",
              "outside air temp sensor",
              "outside air humidity sensor",
              "outside air pressure sensor",
              "outside air flow sensor",
              "outside air flow sp",
              "outside air damper cmd",
              "exhaust air fan cmd",
              "exhaust air damper cmd",
              "humidifier cmd",
              "filter sensor",
              "freezeStat sensor",
              "heatWheel cmd",
              "faceBypass cmd",
              "bypass damper cmd"
            ],
            "via_markers": [
              "heat valve cmd",
              "heat valve sensor",
              "heat circ pump cmd",
              "heat circ pump sensor",
              "cool valve cmd",
              "cool valve sensor",
              "discharge air fan speed cmd",
              "discharge air fan speed sensor",
              "hotDeck air temp sensor",
              "hotDeck air humidity sensor",
              "hotDeck air pressure sensor",
              "hotDeck air flow sensor",
              "hotDeck air fan cmd",
              "hotDeck air fan sensor",
              "coldDeck air temp sensor",
              "coldDeck air humidity sensor",
              "coldDeck air pressure sensor",
              "coldDeck air flow sensor",
              "coldDeck air fan cmd",
              "coldDeck air fan sensor",
              "neutralDeck air temp sensor",
              "neutralDeck air humidity sensor",
              "neutralDeck air pressure sensor",
              "neutralDeck air flow sensor",
              "neutralDeck air fan cmd",
              "neutralDeck air fan sensor"
            ],
            "all": [
              "return air temp sensor",
              "return air humidity sensor",
              "return air pressure sensor",
              "return air flow sensor",
              "return air co2 sensor",
              "return air fan cmd",
              "return air damper cmd",
              "mixed air temp sensor",
              "outside air temp sensor",
              "outside air humidity sensor",
              "outside air pressure sensor",
              "outside air flow sensor",
              "outside air flow sp",
              "outside air damper cmd",
              "exhaust air fan cmd",
              "exhaust air damper cmd",
              "humidifier cmd",
              "filter sensor",
              "freezeStat sensor",
              "heatWheel cmd",
              "faceBypass cmd",
              "bypass damper cmd",
              "heat valve cmd",
              "heat valve sensor",
              "heat circ pump cmd",
              "heat circ pump sensor",
              "cool valve cmd",
              "cool valve sensor",
              "discharge air fan speed cmd",
              "discharge air fan speed sensor",
              "hotDeck air temp sensor",
              "hotDeck air humidity sensor",
              "hotDeck air pressure sensor",
              "hotDeck air flow sensor",
              "hotDeck air fan cmd",
              "hotDeck air fan sensor",
              "coldDeck air temp sensor",
              "coldDeck air humidity sensor",
              "coldDeck air pressure sensor",
              "coldDeck air flow sensor",
              "coldDeck air fan cmd",
              "coldDeck air fan sensor",
              "neutralDeck air temp sensor",
              "neutralDeck air humidity sensor",
              "neutralDeck air pressure sensor",
              "neutralDeck air flow sensor",
              "neutralDeck air fan cmd",
              "neutralDeck air fan sensor"
            ]
          }
        }
      },
      "Equipment-Node-Body": {
        "value": {
          "name": "AHU-01",
          "description": "Air Handler 1 - Main Penthouse",
          "tag": "ahu",
          "markers": "dxCool variableVolume vavZone multiZone singleDuct",
          "@site": "451f769d-1122-4c11-a645-7d2ed505aa0b",
          "metadata": {
            "manufacturer": "Carrier",
            "model": "XGV-75-R-14"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Equipment"
    },
    {
      "name": "Classifications"
    },
    {
      "name": "Components"
    }
  ]
}