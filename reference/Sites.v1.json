{
  "openapi": "3.0.0",
  "info": {
    "title": "Sites",
    "version": "v1.0",
    "description": "",
    "termsOfService": "https://www.counterbalance.io/legal/api-terms",
    "contact": {
      "name": "Taylor Vick",
      "email": "support@counterbalance.io"
    }
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/site": {
      "get": {
        "summary": "Get Site Listing",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "The number of site objects returned"
                    },
                    "data": {
                      "type": "array",
                      "minItems": 0,
                      "uniqueItems": true,
                      "description": "An array of site objects",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Site-Object-Generic"
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 2,
                      "data": [
                        {
                          "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                          "type": "physical",
                          "code": "USSEA",
                          "name": "Seattle, WA HQ",
                          "description": "Seattle, WA Headquarters",
                          "address": "f88879fa-eb4e-4ac2-9dad-d3650919fdef"
                        },
                        {
                          "id": "f11a1a42-75ba-4cab-a053-4fab48933a4f",
                          "type": "physical",
                          "code": "USMSP",
                          "name": "Minneapolis, MN",
                          "description": "Minneapolis, MN Regional Office",
                          "address": "8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-site-list",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of sites available to the authenticated user\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n* Licensed Feature: `sites_base` and/or `sites_virtual`\n\n**Variations**\n\nIf the `type` query paramter is not included with the request, all sites are returned. \n\n**Returned Site Scope**\n\nThis is a scoped endpoint and the data returned may not be a complete, conclusive listing of all resources in the tenant account.\n\nUsers with `*` & `sites:*` permission scopes will always have access to the complete resource data set in the tenant.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "physical",
                "virtual"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Return only sites of the specified type"
          }
        ]
      },
      "post": {
        "summary": "Create New Site",
        "operationId": "create-site",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "",
                      "name": "My First Site",
                      "description": "",
                      "type": "physical",
                      "address": null,
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a new site\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n* Licensed Feature: \n  - `sites_base` to add physical sites and addresses\n  - `sites_virtual` to add virtual sites\n* Adequate quota of the requested type",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the new site"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "physical",
                      "campus",
                      "virtual"
                    ],
                    "default": "physical",
                    "description": "The type of site to create"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "A unique code to identify the site"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the site"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "My First Site",
                    "type": "physical"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Manage Sites"
        ]
      }
    },
    "/v1/site/{siteId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "siteId",
          "in": "path",
          "required": true,
          "description": "A valid site UUID"
        }
      ],
      "get": {
        "summary": "Get Site",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "USSEA",
                      "name": "Seattle, WA HQ",
                      "description": "Seattle, WA Headquarters",
                      "type": "physical",
                      "address": {
                        "id": "f88879fa-eb4e-4ac2-9dad-d3650919fdef",
                        "lines": [
                          "400 Broad Street"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98109,
                        "country": "",
                        "formatted": "400 Broad Street, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.6205,
                          "longitude": -122.34927
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -8,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-site-siteId",
        "description": "Get a site object by ID",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Site",
        "operationId": "patch-v1-site-siteId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "SEA",
                      "name": "Seattle HQ",
                      "description": "Seattle, WA Headquarters",
                      "type": "physical",
                      "address": {
                        "id": "f88879fa-eb4e-4ac2-9dad-d3650919fdef",
                        "lines": [
                          "400 Broad Street"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98109,
                        "country": "",
                        "formatted": "400 Broad Street, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.6205,
                          "longitude": -122.34927
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -8,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update a site by ID\n\nUse the `Update Address` endpoint to update the site's address",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the site"
                  },
                  "code": {
                    "type": "string",
                    "description": "The site's unique ID code",
                    "maxLength": 32
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the site",
                    "maxLength": 300
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Seattle HQ",
                    "code": "SEA"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Manage Sites"
        ]
      },
      "delete": {
        "summary": "Delete Site",
        "operationId": "delete-v1-site-siteId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "Delete a site by ID",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Manage Sites"
        ]
      }
    },
    "/v1/site/address/{addressId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "get": {
        "summary": "Get Address",
        "tags": [
          "Addresses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 80th Street S",
                        "Suite 650"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 80th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "../models/Error-Response.v1.yaml"
                }
              }
            }
          }
        },
        "operationId": "get-v1-site-address-addressId",
        "description": "Get an address by ID",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Address",
        "operationId": "patch-v1-site-address-addressId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 80th Street S",
                        "Suite 800"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 80th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update an address by ID",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": ""
                  },
                  "address": {
                    "type": "string",
                    "description": "Address line one"
                  },
                  "extended_address": {
                    "type": "string",
                    "description": "Address line two"
                  },
                  "locality": {
                    "type": "string",
                    "description": "The neighborhood name"
                  },
                  "city": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "number"
                  },
                  "country": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "IANA timezone ID"
                  },
                  "offset": {
                    "description": "UTC Offset in seconds",
                    "type": "number"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "extended_address": "Suite 800"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Addresses"
        ]
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete-v1-site-address-addressId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "Delete an address by ID",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/address/{addressId}/operation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "post": {
        "summary": "Perform Address Operations",
        "operationId": "post-v1-site-address-addressId-operation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 80th Street S",
                        "Suite 650"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 80th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Carry out various operations on an address object",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "enum": [
                      "normalize"
                    ],
                    "description": "The operation to perform"
                  }
                },
                "required": [
                  "operation"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "operation": "normalize"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/{siteId}/address": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "siteId",
          "in": "path",
          "required": true,
          "description": "A valid site UUID"
        }
      ],
      "put": {
        "summary": "Add Address to Site",
        "operationId": "put-v1-site-siteId-address",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address-Object"
                }
              }
            }
          }
        },
        "description": "Create a new address object and attach it to the specified site",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the address"
                  },
                  "street": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 1,
                    "description": "An array of address lines, up to two",
                    "items": {}
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The city name"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The state name abbreviation"
                  },
                  "locality": {
                    "type": "string",
                    "maxLength": 96,
                    "description": "The name of the neighborhood"
                  },
                  "geocode": {
                    "type": "boolean",
                    "description": "Switch to enable/disable address geocoding"
                  },
                  "county": {
                    "type": "string",
                    "description": "The name of the county",
                    "maxLength": 120
                  },
                  "country": {
                    "type": "string",
                    "description": "The ISO 3166 alpha-2 country code (US, CA, UK, etc)",
                    "maxLength": 2
                  },
                  "postcode": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "*Required if Geocode is disabled*"
                  },
                  "timezone": {
                    "type": "string",
                    "maxLength": 90,
                    "description": "An IANA timezone code for the address"
                  }
                },
                "required": [
                  "street",
                  "city",
                  "state"
                ]
              },
              "examples": {
                "Example with Geocoding": {
                  "value": {
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA"
                  }
                },
                "Example without Geocoding": {
                  "value": {
                    "geocode": false,
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA",
                    "locality": "Lower Queen Anne",
                    "county": "King",
                    "country": "US",
                    "postcode": "98119",
                    "timezone": "America/Los_Angeles"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/utilities/timezone-details": {
      "post": {
        "summary": "Get Timezone Details",
        "operationId": "get-timezone-details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Timezone-Details"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "America/Chicago",
                      "current": {
                        "wall_time": 1604715167,
                        "utc_offset": -21600,
                        "is_dst": false,
                        "tag": "CST"
                      },
                      "names": {
                        "ISO6391_language_code": "en",
                        "generic": "Central Time",
                        "standard": "Central Standard Time",
                        "daylight": "Central Daylight Time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retreieve timezone information for a specified IANA Timezone ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timezone": {
                    "type": "string",
                    "description": "A valid IANA timezone ID"
                  }
                },
                "required": [
                  "timezone"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "timezone": "America/Chicago"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Utilities"
        ]
      }
    },
    "/v1/site/{siteId}/building": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "siteId",
          "in": "path",
          "required": true,
          "description": "A valid site UUID"
        }
      ],
      "get": {
        "summary": "List Buildings",
        "tags": [
          "Buildings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Building-Object"
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "operationId": "list-site-buildings",
        "description": "Retrieve a list of buildings associated with the specified site\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "post": {
        "summary": "Create New Building",
        "operationId": "create-building",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Invalid Site Type": {
                    "value": {
                      "error": {
                        "message": "string",
                        "console": "string",
                        "code": 0
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Buildings"
        ],
        "description": "Retrieve a list of buildings associated with the specified site\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:list`\n* Licensed Feature: `sites_base` + `sites_buildings`\n\n**Variations**\n\nIf the `type` query paramter is not included with the request, all sites are returned. \n\n**Returned Site Scope**\n\nThis is a scoped endpoint and the data returned may not be a complete, conclusive listing of all resources in the tenant account.\n\nUsers with `*` & `sites:*` permission scopes will always have access to the complete resource data set in the tenant.",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/building/{buildingId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "buildingId",
          "in": "path",
          "required": true,
          "description": "A valid building UUID"
        }
      ],
      "get": {
        "summary": "Get Building",
        "tags": [
          "Buildings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building-Object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-building",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of buildings associated with the specified site\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:list`"
      },
      "patch": {
        "summary": "Update Building",
        "operationId": "update-building",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Buildings"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Building",
        "operationId": "delete-building",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Buildings"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Site-Object-Complete": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address-Object"
          },
          "contacts": {}
        },
        "required": [
          "id",
          "code",
          "name",
          "description",
          "type",
          "address"
        ],
        "title": "Typical Site Object",
        "x-tags": [
          "Object Models"
        ]
      },
      "Site-Object-Generic": {
        "description": "A generic site object used in site listings",
        "type": "object",
        "title": "Generic Site Object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The site's UUID"
          },
          "type": {
            "type": "string",
            "enum": [
              "physical",
              "campus",
              "virtual"
            ],
            "description": "The type of site"
          },
          "code": {
            "type": "string",
            "description": "",
            "maxLength": 32
          },
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "address": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid",
            "description": "An associated address object attached to this site"
          }
        },
        "required": [
          "id",
          "type",
          "code",
          "name"
        ],
        "x-tags": [
          "Object Models"
        ]
      },
      "Address-Object": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The address object UUID"
          },
          "lines": {
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "description": "An array of address lines",
            "items": {
              "type": "string"
            }
          },
          "locality": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "minLength": 1
          },
          "county": {
            "type": "string",
            "minLength": 1
          },
          "state": {
            "type": "string",
            "minLength": 1
          },
          "postcode": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "formatted": {
            "type": "string",
            "minLength": 1
          },
          "geolocation": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "timezone": {
            "type": "string",
            "minLength": 1
          },
          "offset": {
            "type": "number"
          },
          "designations": {
            "type": "object",
            "required": [
              "primary_mailing",
              "primary_billing"
            ],
            "properties": {
              "primary_mailing": {
                "type": "boolean"
              },
              "primary_billing": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "lines",
          "locality",
          "city",
          "county",
          "state",
          "postcode",
          "country",
          "formatted",
          "geolocation",
          "timezone",
          "offset",
          "designations"
        ],
        "title": "Address Object",
        "x-tags": [
          "Object Models"
        ]
      },
      "Timezone-Details": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "current": {
            "type": "object",
            "properties": {
              "wall_time": {
                "type": "number"
              },
              "utc_offset": {
                "type": "number"
              },
              "is_dst": {
                "type": "boolean"
              },
              "tag": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "wall_time",
              "utc_offset",
              "is_dst",
              "tag"
            ]
          },
          "names": {
            "type": "object",
            "properties": {
              "ISO6391_language_code": {
                "type": "string",
                "minLength": 1
              },
              "generic": {
                "type": "string",
                "minLength": 1
              },
              "standard": {
                "type": "string",
                "minLength": 1
              },
              "daylight": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "ISO6391_language_code",
              "generic",
              "standard",
              "daylight"
            ]
          }
        },
        "required": [
          "id",
          "current",
          "names"
        ],
        "x-examples": {
          "Example": {
            "id": "America/Chicago",
            "current": {
              "wall_time": 1604715167,
              "utc_offset": -21600,
              "is_dst": false,
              "tag": "CST"
            },
            "names": {
              "ISO6391_language_code": "en",
              "generic": "Central Time",
              "standard": "Central Standard Time",
              "daylight": "Central Daylight Time"
            }
          }
        },
        "title": "Timezone Details",
        "x-tags": [
          "Object Models"
        ]
      },
      "Building-Object": {
        "title": "Building",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-Object"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "floor_count": {
                "type": "integer"
              },
              "area": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Manage Sites"
    },
    {
      "name": "Addresses"
    },
    {
      "name": "Utilities"
    },
    {
      "name": "Buildings"
    }
  ]
}