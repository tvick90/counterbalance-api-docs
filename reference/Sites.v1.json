{
  "openapi": "3.0.0",
  "info": {
    "title": "Sites",
    "version": "v1.0",
    "description": "The Sites API provides endpoints for site and building management, including:\n* Creating & managing sites & associated buildings\n* Creating & managing addresses\n* Viewing current and forecasted weather conditions\n* Viewing timezone details for an IANA Timezone ID\n\n**Site Types**\n\nSites are of one of the following two types: \n\n* A `physical`, as the name implies, is a physical location managed by your organization. Physical sites can be assigned an address and, if licensed, may also contain buildings. \n* A `virtual` site is a placeholder that cannot be assigned an address or buildings. Virtual sites are useful for organizing assets in locations that are not managed by your organization, such as a public cloud region.\n\n**Quotas and Licensing**\n\nSite management is a paid feature. Physical sites are subject to quota availability. Virtual sites and buildings are not measured against a pre-defined quota but require a seperate license. These requirments are outlined in the various endpoint docs.\n\nIf insufficient quota or licensing exists for the specified site type, a `403 Forbidden` error will be thrown and the site will not be created. ",
    "termsOfService": "https://www.counterbalance.io/legal/api-terms",
    "contact": {
      "name": "Taylor Vick",
      "email": "support@counterbalance.io"
    }
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/site": {
      "get": {
        "summary": "Get Site Listing",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "The number of site objects returned"
                    },
                    "data": {
                      "type": "array",
                      "minItems": 0,
                      "uniqueItems": true,
                      "description": "An array of site objects",
                      "items": {
                        "$ref": "#/components/schemas/Site-Object-Generic"
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 2,
                      "data": [
                        {
                          "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                          "type": "physical",
                          "code": "USSEA",
                          "name": "Seattle, WA HQ",
                          "description": "Seattle, WA Headquarters",
                          "address": "f88879fa-eb4e-4ac2-9dad-d3650919fdef"
                        },
                        {
                          "id": "f11a1a42-75ba-4cab-a053-4fab48933a4f",
                          "type": "physical",
                          "code": "USMSP",
                          "name": "Minneapolis, MN",
                          "description": "Minneapolis, MN Regional Office",
                          "address": "8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-site-list",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "### Synopsis\nRetrieve a list of sites available to the authenticated user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n* Licensed Feature: `sites_base` and/or `sites_virtual`\n\n### Variations\nA combination of one or more query parameters may be used to vary the returned data according to a particular need. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nFor example, perhaps you organize sites with a pre-defined coding system that includes the state abbreviation in the assigned site codes. You can then return only sites in MN by using a wildcard search with the `code` query param.\n\n<!--\ntitle: \"Site Code Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?code=*MN*\n```\n\nThe listing can also filtered by site type by specifying the `type` parameter and setting it to either `physical` or `virtual`.\n\n<!--\ntitle: \"Physical Sites Only\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?type=physical\n```",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "physical",
                "virtual"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Return only sites of the specified type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "description": "Return only sites with a matching code. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Return only sites with a matching name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Return only sites with a matching description. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create New Site",
        "operationId": "create-site",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "",
                      "name": "Seattle Office",
                      "description": "",
                      "type": "physical",
                      "address": null,
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nCreate a new site\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n* Licensed Feature: \n  - `sites_base` to add physical sites and addresses\n  - `sites_virtual` to add virtual sites\n* Adequate quota of the requested type",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the new site"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "physical",
                      "campus",
                      "virtual"
                    ],
                    "default": "physical",
                    "description": "The type of site to create"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "A unique code to identify the site"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the site"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Seattle Office",
                    "type": "physical"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Manage Sites"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/jso"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ]
      }
    },
    "/v1/site/{siteId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "siteId",
          "in": "path",
          "required": true,
          "description": "A valid site UUID"
        }
      ],
      "get": {
        "summary": "Get Site",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "USSEA",
                      "name": "Seattle, WA HQ",
                      "description": "Seattle, WA Headquarters",
                      "type": "physical",
                      "address": {
                        "id": "f88879fa-eb4e-4ac2-9dad-d3650919fdef",
                        "lines": [
                          "400 Broad Street"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98109,
                        "country": "",
                        "formatted": "400 Broad Street, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.6205,
                          "longitude": -122.34927
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -8,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-site",
        "description": "### Synopsis\nRetrieve the details for the specified site\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Site",
        "operationId": "update-site",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site-Object-Complete"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "799ef189-c32b-48b4-9eb8-4787ebe37f2a",
                      "code": "SEA",
                      "name": "Seattle HQ",
                      "description": "Seattle, WA Headquarters",
                      "type": "physical",
                      "address": {
                        "id": "f88879fa-eb4e-4ac2-9dad-d3650919fdef",
                        "lines": [
                          "400 Broad Street"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98109,
                        "country": "",
                        "formatted": "400 Broad Street, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.6205,
                          "longitude": -122.34927
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -8,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "contacts": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nUpdate the details for the specified site\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n* Licensed Feature: `sites_base` and/or `sites_virtual`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the site"
                  },
                  "code": {
                    "type": "string",
                    "description": "The site's unique ID code",
                    "maxLength": 32
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the site",
                    "maxLength": 300
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Seattle HQ",
                    "code": "SEA"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Manage Sites"
        ]
      },
      "delete": {
        "summary": "Delete Site",
        "operationId": "delete-site",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Site Not Empty": {
                    "value": {
                      "error": {
                        "message": "Site is not empty",
                        "console": "Remove 2 building(s) before deleting this site",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nDelete the specified site\n\n<!-- theme: danger -->\n> _**Heads Up** This cannot be undone!_\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:site:delete`\n* Specified site must be void of any associated objects",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Manage Sites"
        ]
      }
    },
    "/v1/site/address/{addressId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "get": {
        "summary": "Get Address",
        "tags": [
          "Addresses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 80th Street S",
                        "Suite 650"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 80th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-address",
        "description": "### Synopsis\nRetrieve the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Address",
        "operationId": "update-address",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 80th Street S",
                        "Suite 800"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 80th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nUpdate the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": ""
                  },
                  "address": {
                    "type": "string",
                    "description": "Address line one"
                  },
                  "extended_address": {
                    "type": "string",
                    "description": "Address line two"
                  },
                  "locality": {
                    "type": "string",
                    "description": "The neighborhood name"
                  },
                  "city": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "number"
                  },
                  "country": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "IANA timezone ID"
                  },
                  "offset": {
                    "description": "UTC Offset in seconds",
                    "type": "number"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "extended_address": "Suite 800"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Addresses"
        ]
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete-address",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "### Synopsis\nDelete the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/address/{addressId}/operation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "post": {
        "summary": "Perform Address Operations",
        "operationId": "address-operations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "f3643601-d122-47c5-893c-1f108c07d840",
                      "lines": [
                        "80 8th Street S",
                        "Suite 650"
                      ],
                      "locality": "Loring Park",
                      "city": "Minneapolis",
                      "county": "Hennepin",
                      "state": "MN",
                      "postcode": 55403,
                      "country": "USA",
                      "formatted": "80 8th Street S, Suite 650, Minneapolis, MN 55403",
                      "geolocation": {
                        "latitude": 44.97191,
                        "longitude": -93.28492
                      },
                      "timezone": "America/Chicago",
                      "offset": -21600,
                      "designations": {
                        "primary_mailing": true,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Carry out various operations on an address object",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "enum": [
                      "normalize"
                    ],
                    "description": "The operation to perform"
                  }
                },
                "required": [
                  "operation"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "operation": "normalize"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/address": {
      "parameters": [],
      "put": {
        "summary": "Add Address to Site or Building",
        "operationId": "create-address",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "06283d43-1da3-42c7-ae96-8b304cb4cbb9",
                      "lines": [
                        "140 4th Ave N",
                        "Suite 210"
                      ],
                      "locality": "South Lake Union",
                      "city": "Seattle",
                      "county": "King",
                      "state": "WA",
                      "postcode": 98109,
                      "country": "USA",
                      "formatted": "140 4th Ave N, Suite 210, Seattle, WA 98109",
                      "geolocation": {
                        "latitude": 47.61916,
                        "longitude": -122.34801
                      },
                      "timezone": "America/Los_Angeles",
                      "offset": -28800,
                      "designations": {
                        "primary_mailing": false,
                        "primary_billing": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "### Synopsis\nCreate a new address object and attach it to the specified site or building\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ \n  \n  _When specifying a site ID:_ `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n  \n  _When specifying a building ID:_ `*`,`sites:*`,`sites:building:*`,`sites:building:update`\n\n\n### Address Geocoding\nBy default, new addresses are geocoded to determine their GPS coordinates, timezone, and to fill-in various extended properties such as the locality, country, and ZIP or postcode. \n\nGeocoding is an optional process and can be skipped by setting `geocode` to `false` in the request body. If geocoding is skipped, the following additional body parameters become required: `county`, `country`, `postcode`, `timezone`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the address"
                  },
                  "street": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 1,
                    "description": "An array of address lines, up to two",
                    "items": {}
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The city name"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The state name abbreviation"
                  },
                  "locality": {
                    "type": "string",
                    "maxLength": 96,
                    "description": "The name of the neighborhood"
                  },
                  "geocode": {
                    "type": "boolean",
                    "description": "Switch to enable/disable address geocoding"
                  },
                  "county": {
                    "type": "string",
                    "description": "The name of the county",
                    "maxLength": 120
                  },
                  "country": {
                    "type": "string",
                    "description": "The ISO 3166 alpha-3 country code (USA, CAN, etc)",
                    "maxLength": 3
                  },
                  "postcode": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "*Required if Geocode is disabled*"
                  },
                  "timezone": {
                    "type": "string",
                    "maxLength": 90,
                    "description": "An IANA timezone code for the address"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The longitude value of the address"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The latitude value of the address"
                  }
                },
                "required": [
                  "street",
                  "city",
                  "state"
                ]
              },
              "examples": {
                "Example with Geocoding": {
                  "value": {
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA"
                  }
                },
                "Example without Geocoding": {
                  "value": {
                    "geocode": false,
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA",
                    "locality": "Lower Queen Anne",
                    "county": "King",
                    "country": "USA",
                    "postcode": "98119",
                    "timezone": "America/Los_Angeles"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "site",
            "description": "A valid site UUID"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "building",
            "description": "A valid building UUID"
          }
        ]
      }
    },
    "/v1/site/{siteId}/building": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "siteId",
          "in": "path",
          "required": true,
          "description": "A valid site UUID"
        }
      ],
      "get": {
        "summary": "List Buildings",
        "tags": [
          "Buildings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Building-Object-Brief"
                      }
                    }
                  },
                  "required": [
                    "count",
                    "data"
                  ]
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 2,
                      "data": [
                        {
                          "id": "6c65fd9f-3ff3-4e70-bec7-35ab4e73f47d",
                          "name": "Building 1 (South)",
                          "code": "SEA1",
                          "description": "South building",
                          "address": "9286897f-d334-4cc0-ba12-e822b8aad653",
                          "attributes": {
                            "floor_count": 1,
                            "area": ""
                          }
                        },
                        {
                          "id": "cf724f7e-2a88-4932-9e51-88c7eb532bdf",
                          "name": "Building 2 (North)",
                          "code": "SEA2",
                          "description": "South Building",
                          "address": "06283d43-1da3-42c7-ae96-8b304cb4cbb9",
                          "attributes": {
                            "floor_count": 1,
                            "area": ""
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Site Not Found": {
                    "value": {
                      "error": {
                        "message": "Site not found",
                        "console": "Site not found",
                        "code": 404
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "list-site-buildings",
        "description": "### Synopsis\nRetrieve a list of buildings associated with the specified site\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "post": {
        "summary": "Create New Building",
        "operationId": "create-building",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "c68e0256-bbcc-4d3b-9e45-53223a240939",
                      "code": "BLDG-A",
                      "name": "Building A",
                      "description": "Primary building",
                      "address": null,
                      "attributes": {
                        "floor_count": 1,
                        "area": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Site Type": {
                    "value": {
                      "error": {
                        "message": "Invalid site type",
                        "console": "Buildings can only be added to physical sites",
                        "code": 400
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Site Not Found": {
                    "value": {
                      "error": {
                        "message": "Site not found",
                        "console": "Site not found",
                        "code": 404
                      },
                      "logging_hash": "daa4ceb0a1d0434987e2e536318f4140ad537560"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Buildings"
        ],
        "description": "Retrieve a list of buildings associated with the specified site\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:list`\n* Licensed Feature: `sites_enhanced`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 96,
                    "description": "A unique name for the new building"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "A unique code to identify the building"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "A description of the new building"
                  },
                  "floor_count": {
                    "type": "integer",
                    "maximum": 999,
                    "description": "The number of floors in the building"
                  },
                  "area": {
                    "type": "string",
                    "description": "The square footage of the building"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Building A",
                    "code": "BLDG-A",
                    "description": "Primary building"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/site/building/{buildingId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "buildingId",
          "in": "path",
          "required": true,
          "description": "A valid building UUID"
        }
      ],
      "get": {
        "summary": "Get Building",
        "tags": [
          "Buildings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "6c65fd9f-3ff3-4e70-bec7-35ab4e73f47d",
                      "code": "SEA1",
                      "name": "Building 1 (South)",
                      "description": "South building",
                      "address": {
                        "id": "9286897f-d334-4cc0-ba12-e822b8aad653",
                        "lines": [
                          "635 Elliot Ave W",
                          "Suite 200"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98119,
                        "country": "USA",
                        "formatted": "635 Elliot Ave W, Suite 200, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.62589,
                          "longitude": -122.36816
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -28800,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "attributes": {
                        "floor_count": 4,
                        "area": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Building Not Found": {
                    "value": {
                      "error": {
                        "message": "Building ID not found",
                        "console": "The building ID 1c5ed793-8d23-439e-bce4-ef07ab88d402 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-building",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve the specified building\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:read`\n* Licensed Feature: `sites_enhanced`"
      },
      "patch": {
        "summary": "Update Building",
        "operationId": "update-building",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building-Object"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "6c65fd9f-3ff3-4e70-bec7-35ab4e73f47d",
                      "code": "SEA1",
                      "name": "Building 1 (South)",
                      "description": "South building near the water tower",
                      "address": {
                        "id": "9286897f-d334-4cc0-ba12-e822b8aad653",
                        "lines": [
                          "635 Elliot Ave W",
                          "Suite 200"
                        ],
                        "locality": "",
                        "city": "Seattle",
                        "county": "King",
                        "state": "WA",
                        "postcode": 98119,
                        "country": "USA",
                        "formatted": "635 Elliot Ave W, Suite 200, Seattle, WA 98119",
                        "geolocation": {
                          "latitude": 47.62589,
                          "longitude": -122.36816
                        },
                        "timezone": "America/Los_Angeles",
                        "offset": -28800,
                        "designations": {
                          "primary_mailing": false,
                          "primary_billing": false
                        }
                      },
                      "attributes": {
                        "floor_count": 4,
                        "area": "5,760 SQ FT"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Buildings"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Update the specified building\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:read`\n* Licensed Feature: `sites_enhanced`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the building",
                    "maxLength": 96
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the building",
                    "maxLength": 120
                  },
                  "code": {
                    "type": "string",
                    "description": "The building's unique code",
                    "maxLength": 32
                  },
                  "floor_count": {
                    "type": "number",
                    "description": "The number of floors in the building",
                    "maximum": 999
                  },
                  "area": {
                    "type": "string",
                    "description": "The square footage of the building"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "floor_count": 4,
                    "description": "South building near the water tower",
                    "area": "5,760 SQ FT"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Building",
        "operationId": "delete-building",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "Delete the specified building\n\n**Prerequisites** \n\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:building:*`,`sites:building:delete`\n* Licensed Feature: `sites_enhanced`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Buildings"
        ]
      }
    },
    "/v1/site/weather/forecast": {
      "get": {
        "summary": "Get Weather Forecast",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Forecast"
                },
                "examples": {
                  "Response (Imperial Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "44.98588",
                        "longitude": "-93.28069"
                      },
                      "units": "imperial",
                      "summary": "Snow between late tonight and tomorrow morning will accumulate 1-2 inches before changing to rain",
                      "forecasts": [
                        {
                          "date": 1606136400,
                          "sources": [
                            "AccuWeather"
                          ],
                          "air_quality": {
                            "airquality": {
                              "value": 75,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "grass": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "mold": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "ragweed": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "tree": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "uvindex": {
                              "value": 2,
                              "rating": "Low",
                              "rating_value": 1
                            }
                          },
                          "hours_of_sun": 7,
                          "temperature": {
                            "minimum": {
                              "value": 30,
                              "unit": "F"
                            },
                            "maximum": {
                              "value": 38,
                              "unit": "F"
                            }
                          },
                          "day": {
                            "icon": 3,
                            "phrases": {
                              "long": "Times of clouds and sun",
                              "short": "Times of clouds and sun"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 4,
                              "thunderstorm": 0,
                              "rain": 3,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 122,
                                "localized": "ESE"
                              },
                              "speed": {
                                "value": 4,
                                "unit": "mi/h"
                              },
                              "gust": {
                                "value": 10,
                                "unit": "mi/h",
                                "direction": "SE"
                              }
                            },
                            "cloud_cover": 29
                          },
                          "night": {
                            "icon": 22,
                            "phrases": {
                              "long": "Plenty of clouds with a coating to an inch of snow late",
                              "short": "Overcast with snow late"
                            },
                            "is_raining": true,
                            "probabilities": {
                              "precipitation": 75,
                              "thunderstorm": 0,
                              "rain": 10,
                              "snow": 75,
                              "ice": 3
                            },
                            "wind": {
                              "direction": {
                                "degrees": 139,
                                "localized": "SE"
                              },
                              "speed": {
                                "value": 9,
                                "unit": "mi/h"
                              },
                              "gust": {
                                "value": 13,
                                "unit": "mi/h",
                                "direction": "SE"
                              }
                            },
                            "cloud_cover": 97
                          }
                        }
                      ]
                    }
                  },
                  "Response (Metric Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "44.98588",
                        "longitude": "-93.28069"
                      },
                      "units": "metric",
                      "summary": "Snow between late tonight and tomorrow morning will accumulate 3-6 cm before changing to rain",
                      "forecasts": [
                        {
                          "date": 1606136400,
                          "sources": [
                            "AccuWeather"
                          ],
                          "air_quality": {
                            "airquality": {
                              "value": 75,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "grass": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "mold": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "ragweed": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "tree": {
                              "value": 0,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "uvindex": {
                              "value": 2,
                              "rating": "Low",
                              "rating_value": 1
                            }
                          },
                          "hours_of_sun": 7,
                          "temperature": {
                            "minimum": {
                              "value": -1,
                              "unit": "C"
                            },
                            "maximum": {
                              "value": 3,
                              "unit": "C"
                            }
                          },
                          "day": {
                            "icon": 3,
                            "phrases": {
                              "long": "Times of clouds and sun",
                              "short": "Times of clouds and sun"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 4,
                              "thunderstorm": 0,
                              "rain": 3,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 122,
                                "localized": "ESE"
                              },
                              "speed": {
                                "value": 7,
                                "unit": "km/h"
                              },
                              "gust": {
                                "value": 16,
                                "unit": "km/h",
                                "direction": "SE"
                              }
                            },
                            "cloud_cover": 29
                          },
                          "night": {
                            "icon": 22,
                            "phrases": {
                              "long": "Plenty of clouds with 1-3 cm of snow late",
                              "short": "Overcast, late snow, 1-3 cm"
                            },
                            "is_raining": true,
                            "probabilities": {
                              "precipitation": 75,
                              "thunderstorm": 0,
                              "rain": 10,
                              "snow": 75,
                              "ice": 3
                            },
                            "wind": {
                              "direction": {
                                "degrees": 139,
                                "localized": "SE"
                              },
                              "speed": {
                                "value": 14,
                                "unit": "km/h"
                              },
                              "gust": {
                                "value": 22,
                                "unit": "km/h",
                                "direction": "SE"
                              }
                            },
                            "cloud_cover": 97
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Too Many Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID, but not both",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Not Enough Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Duration": {
                    "value": {
                      "error": {
                        "message": "9 is not a valid duration",
                        "console": "Invalid duration value. Allowed value(s): 1, 5, 10, or 15",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-weather-forecast",
        "description": "Retrieve a detailed daily weather forecast\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:forecast`\n* Licensed Feature: `weather_forecasts`\n\n### Specifying the Location\nWeather forecasts can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `address` are mutually exclusive. Passing more than one will result in an error_\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the weather forecast for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "address",
            "description": "Get the weather forecast for the specified address ID"
          },
          {
            "schema": {
              "type": "integer",
              "default": 5,
              "enum": [
                1,
                5,
                10,
                15
              ]
            },
            "in": "query",
            "name": "duration",
            "description": "The number of forecast outlook days to return"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "metric",
            "description": "Return the results with metric units instead of imperial units"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/weather/current-conditions": {
      "get": {
        "summary": "Get Current Weather Conditions",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Current-Conditions"
                },
                "examples": {
                  "Response (Imperial Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "44.98588",
                        "longitude": "-93.28069"
                      },
                      "units": "imperial",
                      "timestamp": 1606150620,
                      "phrase": "Mostly sunny",
                      "icon": 2,
                      "is_raining": false,
                      "is_daytime": true,
                      "temperature": {
                        "value": 30,
                        "unit": "F"
                      },
                      "apparent_temperature": {
                        "value": 30,
                        "unit": "F"
                      },
                      "wetbulb_temperature": {
                        "value": 28,
                        "unit": "F"
                      },
                      "windchill_temperature": {
                        "value": 27,
                        "unit": "F"
                      },
                      "relative_humidity": 71,
                      "dewpoint": {
                        "value": 22,
                        "unit": "F"
                      },
                      "wind": {
                        "direction": {
                          "degrees": 113,
                          "localized": "ESE"
                        },
                        "speed": {
                          "value": 3,
                          "unit": "mi/h"
                        },
                        "gust": {
                          "value": 6,
                          "unit": "mi/h"
                        }
                      },
                      "visibility": {
                        "value": 10,
                        "unit": "mi",
                        "obstructions": ""
                      },
                      "cloud_cover": 14,
                      "ceiling": {
                        "value": 40000,
                        "unit": "ft"
                      },
                      "pressure": {
                        "value": 30.37,
                        "unit": "inHg",
                        "direction": "Steady"
                      }
                    }
                  },
                  "Response (Metric Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "44.98588",
                        "longitude": "-93.28069"
                      },
                      "units": "metric",
                      "timestamp": 1606155600,
                      "phrase": "Mostly sunny",
                      "icon": 2,
                      "is_raining": false,
                      "is_daytime": true,
                      "temperature": {
                        "value": 0,
                        "unit": "C"
                      },
                      "apparent_temperature": {
                        "value": 0,
                        "unit": "C"
                      },
                      "wetbulb_temperature": {
                        "value": -1,
                        "unit": "C"
                      },
                      "windchill_temperature": {
                        "value": -1,
                        "unit": "C"
                      },
                      "relative_humidity": 65,
                      "dewpoint": {
                        "value": -4,
                        "unit": "C"
                      },
                      "wind": {
                        "direction": {
                          "degrees": 135,
                          "localized": "SE"
                        },
                        "speed": {
                          "value": 5,
                          "unit": "km/h"
                        },
                        "gust": {
                          "value": 10,
                          "unit": "km/h"
                        }
                      },
                      "visibility": {
                        "value": 17,
                        "unit": "km",
                        "obstructions": ""
                      },
                      "cloud_cover": 12,
                      "ceiling": {
                        "value": 12192,
                        "unit": "m"
                      },
                      "pressure": {
                        "value": 1027.1,
                        "unit": "mb",
                        "direction": "Falling"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-current-weather-conditions",
        "description": "### Synposis\nRetrieve detailed current weather conditions\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:currently`\n* Licensed Feature: `weather_conditions`\n\n### Specifying the Location\nWeather conditions can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `address` are mutually exclusive. Passing more than one will result in an error_\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the current conditions for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "address",
            "description": "Get the current conditions for the specified address ID"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "metric",
            "description": "Return the results with metric units instead of imperial units"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/weather/alerts": {
      "get": {
        "summary": "Get Weather Alerts",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Alerts"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 1,
                      "effective_coordinates": {
                        "latitude": 47.8877148,
                        "longitude": -124.6237354
                      },
                      "data": [
                        {
                          "id": 2203972,
                          "category": "FLOOD",
                          "description": "High Surf Advisory",
                          "source": "U.S. National Weather Service",
                          "areas": [
                            {
                              "name": "North Coast",
                              "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                              "status": "New",
                              "span": {
                                "start": 1606284000,
                                "end": 1606370400
                              },
                              "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-v1-site-weather-alerts",
        "description": "Retrieve current sever weather alerts and advisories\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:alerts`\n* Licensed Feature: `weather_alerts`\n\n### Specifying the Location\nWeather alerts and advisories can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `address` are mutually exclusive. Passing more than one will result in an error_\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code.\n\n<!-- theme: warning-->\n> _The API supports any valid IETF language code but alert data may not be available in the specified language_",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get weather alerts for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "address",
            "description": "Get weather alerts for the specified address ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/utilities/timezone": {
      "get": {
        "summary": "Get Timezone Details",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone-Details"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "id": "America/Los_Angeles",
                      "effective_coordinates": [
                        "47.49316",
                        "-122.29394"
                      ],
                      "current": {
                        "wall_time": 1606186725,
                        "utc_offset": -28800,
                        "is_dst": false,
                        "tag": "PST"
                      },
                      "names": {
                        "ISO6391_language_code": "en",
                        "generic": "Pacific Time",
                        "standard": "Pacific Standard Time",
                        "daylight": "Pacific Daylight Time"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either an IANA timezone ID, coordinates, or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Adress Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc57-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid parameter combination",
                        "console": "Parameters timezone, coordinates, and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-timezone",
        "description": "### Synopsis\nRetrieve timezone details including the current time\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:utilities:*`,`sites:utilities:timezone`\n* Licensed Feature: `sites_base`\n\n### Specifying Coordinates or Address ID\nTimezone details can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n### Specifying am IANA Timezone ID\nTimezone details can be obtained for any Timezone by specifying the IANA timezone ID\n\n<!-- theme: warning-->\n> _Parameters `timezone`, `coordinates` and `address` are mutually exclusive. Passing more than one will result in an error_\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timezone",
            "description": "An IANA timezone ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the timezone for the specified coordinates"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "address",
            "description": "Get the timezone for the specified address ID"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Site-Object-Complete": {
        "description": "",
        "type": "object",
        "title": "Typical Site Object",
        "x-tags": [
          "Object Models"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 96
          },
          "description": {
            "type": "string",
            "maxLength": 120
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "address": {
            "$ref": "#/components/schemas/Address-Object"
          },
          "contacts": {}
        },
        "required": [
          "id",
          "code",
          "name",
          "description",
          "type",
          "address"
        ]
      },
      "Site-Object-Generic": {
        "description": "A generic site object used in site listings",
        "type": "object",
        "title": "Generic Site Object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The site's UUID"
          },
          "type": {
            "type": "string",
            "enum": [
              "physical",
              "campus",
              "virtual"
            ],
            "description": "The type of site"
          },
          "code": {
            "type": "string",
            "description": "",
            "maxLength": 32
          },
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "address": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid",
            "description": "An associated address object attached to this site"
          }
        },
        "required": [
          "id",
          "type",
          "code",
          "name"
        ],
        "x-tags": [
          "Object Models"
        ]
      },
      "Address-Object": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The address object UUID"
          },
          "lines": {
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "description": "An array of address lines",
            "items": {
              "type": "string"
            }
          },
          "locality": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "minLength": 1
          },
          "county": {
            "type": "string",
            "minLength": 1
          },
          "state": {
            "type": "string",
            "minLength": 1
          },
          "postcode": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "formatted": {
            "type": "string",
            "minLength": 1
          },
          "geolocation": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "timezone": {
            "type": "string",
            "minLength": 1
          },
          "offset": {
            "type": "number"
          },
          "designations": {
            "type": "object",
            "required": [
              "primary_mailing",
              "primary_billing"
            ],
            "properties": {
              "primary_mailing": {
                "type": "boolean"
              },
              "primary_billing": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "lines",
          "locality",
          "city",
          "county",
          "state",
          "postcode",
          "country",
          "formatted",
          "geolocation",
          "timezone",
          "offset",
          "designations"
        ],
        "title": "Address Object",
        "x-tags": [
          "Object Models"
        ]
      },
      "Timezone-Details": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "effective_coordinates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "current": {
            "type": "object",
            "required": [
              "wall_time",
              "utc_offset",
              "is_dst",
              "tag"
            ],
            "properties": {
              "wall_time": {
                "type": "number"
              },
              "utc_offset": {
                "type": "number"
              },
              "is_dst": {
                "type": "boolean"
              },
              "tag": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "names": {
            "type": "object",
            "required": [
              "ISO6391_language_code",
              "generic",
              "standard",
              "daylight"
            ],
            "properties": {
              "ISO6391_language_code": {
                "type": "string",
                "minLength": 1
              },
              "generic": {
                "type": "string",
                "minLength": 1
              },
              "standard": {
                "type": "string",
                "minLength": 1
              },
              "daylight": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        },
        "required": [
          "id",
          "effective_coordinates",
          "current",
          "names"
        ],
        "title": "Timezone Details",
        "x-examples": {
          "Example": {
            "id": "Europe/Berlin",
            "effective_coordinates": [
              "52.5535101",
              "13.2911232"
            ],
            "current": {
              "wall_time": 1606190613,
              "utc_offset": 3600,
              "is_dst": false,
              "tag": "CET"
            },
            "names": {
              "ISO6391_language_code": "en",
              "generic": "Central European Time",
              "standard": "Central European Standard Time",
              "daylight": "Central European Summer Time"
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "Building-Object": {
        "title": "Building",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address-Object"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "floor_count": {
                "type": "integer"
              },
              "area": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "Building-Object-Brief": {
        "title": "Building Simplified",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "floor_count": {
                "type": "integer"
              },
              "area": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "Forecast-Day-Details": {
        "description": "",
        "type": "object",
        "properties": {
          "date": {
            "type": "number"
          },
          "sources": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "air_quality": {
            "type": "object",
            "properties": {
              "airquality": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "grass": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "mold": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "ragweed": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "tree": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "uvindex": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              }
            },
            "required": [
              "airquality",
              "grass",
              "mold",
              "ragweed",
              "tree",
              "uvindex"
            ]
          },
          "hours_of_sun": {
            "type": "number"
          },
          "temperature": {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              },
              "maximum": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              }
            },
            "required": [
              "minimum",
              "maximum"
            ]
          },
          "day": {
            "type": "object",
            "properties": {
              "icon": {
                "type": "number"
              },
              "phrases": {
                "type": "object",
                "properties": {
                  "long": {
                    "type": "string",
                    "minLength": 1
                  },
                  "short": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "long",
                  "short"
                ]
              },
              "is_raining": {
                "type": "boolean"
              },
              "probabilities": {
                "type": "object",
                "properties": {
                  "precipitation": {
                    "type": "number"
                  },
                  "thunderstorm": {
                    "type": "number"
                  },
                  "rain": {
                    "type": "number"
                  },
                  "snow": {
                    "type": "number"
                  },
                  "ice": {
                    "type": "number"
                  }
                },
                "required": [
                  "precipitation",
                  "thunderstorm",
                  "rain",
                  "snow",
                  "ice"
                ]
              },
              "wind": {
                "type": "object",
                "properties": {
                  "direction": {
                    "type": "object",
                    "properties": {
                      "degrees": {
                        "type": "number"
                      },
                      "localized": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "degrees",
                      "localized"
                    ]
                  },
                  "speed": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit"
                    ]
                  },
                  "gust": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      },
                      "direction": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit",
                      "direction"
                    ]
                  }
                },
                "required": [
                  "direction",
                  "speed",
                  "gust"
                ]
              },
              "cloud_cover": {
                "type": "number"
              }
            },
            "required": [
              "icon",
              "phrases",
              "is_raining",
              "probabilities",
              "wind",
              "cloud_cover"
            ]
          },
          "night": {
            "type": "object",
            "properties": {
              "icon": {
                "type": "number"
              },
              "phrases": {
                "type": "object",
                "properties": {
                  "long": {
                    "type": "string",
                    "minLength": 1
                  },
                  "short": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "long",
                  "short"
                ]
              },
              "is_raining": {
                "type": "boolean"
              },
              "probabilities": {
                "type": "object",
                "properties": {
                  "precipitation": {
                    "type": "number"
                  },
                  "thunderstorm": {
                    "type": "number"
                  },
                  "rain": {
                    "type": "number"
                  },
                  "snow": {
                    "type": "number"
                  },
                  "ice": {
                    "type": "number"
                  }
                },
                "required": [
                  "precipitation",
                  "thunderstorm",
                  "rain",
                  "snow",
                  "ice"
                ]
              },
              "wind": {
                "type": "object",
                "properties": {
                  "direction": {
                    "type": "object",
                    "properties": {
                      "degrees": {
                        "type": "number"
                      },
                      "localized": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "degrees",
                      "localized"
                    ]
                  },
                  "speed": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit"
                    ]
                  },
                  "gust": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      },
                      "direction": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit",
                      "direction"
                    ]
                  }
                },
                "required": [
                  "direction",
                  "speed",
                  "gust"
                ]
              },
              "cloud_cover": {
                "type": "number"
              }
            },
            "required": [
              "icon",
              "phrases",
              "is_raining",
              "probabilities",
              "wind",
              "cloud_cover"
            ]
          }
        },
        "required": [
          "date",
          "sources",
          "air_quality",
          "hours_of_sun",
          "temperature",
          "day",
          "night"
        ],
        "title": "Forecast Day Details",
        "x-examples": {
          "Example": {
            "date": 1606136400,
            "sources": [
              "AccuWeather"
            ],
            "air_quality": {
              "airquality": {
                "value": 75,
                "rating": "Moderate",
                "rating_value": 2
              },
              "grass": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "mold": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "ragweed": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "tree": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "uvindex": {
                "value": 2,
                "rating": "Low",
                "rating_value": 1
              }
            },
            "hours_of_sun": 7,
            "temperature": {
              "minimum": {
                "value": 30,
                "unit": "F"
              },
              "maximum": {
                "value": 38,
                "unit": "F"
              }
            },
            "day": {
              "icon": 3,
              "phrases": {
                "long": "Times of clouds and sun",
                "short": "Times of clouds and sun"
              },
              "is_raining": false,
              "probabilities": {
                "precipitation": 4,
                "thunderstorm": 0,
                "rain": 3,
                "snow": 1,
                "ice": 0
              },
              "wind": {
                "direction": {
                  "degrees": 122,
                  "localized": "ESE"
                },
                "speed": {
                  "value": 4,
                  "unit": "mi/h"
                },
                "gust": {
                  "value": 10,
                  "unit": "mi/h",
                  "direction": "SE"
                }
              },
              "cloud_cover": 29
            },
            "night": {
              "icon": 22,
              "phrases": {
                "long": "Plenty of clouds with a coating to an inch of snow late",
                "short": "Overcast with snow late"
              },
              "is_raining": true,
              "probabilities": {
                "precipitation": 75,
                "thunderstorm": 0,
                "rain": 10,
                "snow": 75,
                "ice": 3
              },
              "wind": {
                "direction": {
                  "degrees": 139,
                  "localized": "SE"
                },
                "speed": {
                  "value": 9,
                  "unit": "mi/h"
                },
                "gust": {
                  "value": 13,
                  "unit": "mi/h",
                  "direction": "SE"
                }
              },
              "cloud_cover": 97
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "Weather-Forecast": {
        "description": "",
        "type": "object",
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "string",
                "minLength": 1
              },
              "longitude": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "units": {
            "type": "string",
            "minLength": 1
          },
          "summary": {
            "type": "string",
            "minLength": 1
          },
          "forecasts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "": {
                  "$ref": "#/components/schemas/Forecast-Day-Details"
                }
              }
            }
          }
        },
        "required": [
          "effective_coordinates",
          "units",
          "summary",
          "forecasts"
        ],
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "summary": "Snow between late tonight and tomorrow morning will accumulate 1-2 inches before changing to rain",
            "forecasts": [
              {
                "date": 1606136400,
                "sources": [
                  "AccuWeather"
                ],
                "air_quality": {
                  "airquality": {
                    "value": 75,
                    "rating": "Moderate",
                    "rating_value": 2
                  },
                  "grass": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "mold": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "ragweed": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "tree": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "uvindex": {
                    "value": 2,
                    "rating": "Low",
                    "rating_value": 1
                  }
                },
                "hours_of_sun": 7,
                "temperature": {
                  "minimum": {
                    "value": 30,
                    "unit": "F"
                  },
                  "maximum": {
                    "value": 38,
                    "unit": "F"
                  }
                },
                "day": {
                  "icon": 3,
                  "phrases": {
                    "long": "Times of clouds and sun",
                    "short": "Times of clouds and sun"
                  },
                  "is_raining": false,
                  "probabilities": {
                    "precipitation": 4,
                    "thunderstorm": 0,
                    "rain": 3,
                    "snow": 1,
                    "ice": 0
                  },
                  "wind": {
                    "direction": {
                      "degrees": 122,
                      "localized": "ESE"
                    },
                    "speed": {
                      "value": 4,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 10,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 29
                },
                "night": {
                  "icon": 22,
                  "phrases": {
                    "long": "Plenty of clouds with a coating to an inch of snow late",
                    "short": "Overcast with snow late"
                  },
                  "is_raining": true,
                  "probabilities": {
                    "precipitation": 75,
                    "thunderstorm": 0,
                    "rain": 10,
                    "snow": 75,
                    "ice": 3
                  },
                  "wind": {
                    "direction": {
                      "degrees": 139,
                      "localized": "SE"
                    },
                    "speed": {
                      "value": 9,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 13,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 97
                }
              }
            ]
          }
        },
        "title": "Weather Forecast",
        "x-tags": [
          "Object Models"
        ]
      },
      "Weather-Current-Conditions": {
        "description": "",
        "type": "object",
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string",
                "minLength": 1
              },
              "longitude": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "units": {
            "type": "string",
            "minLength": 1
          },
          "timestamp": {
            "type": "number"
          },
          "phrase": {
            "type": "string",
            "minLength": 1
          },
          "icon": {
            "type": "number"
          },
          "is_raining": {
            "type": "boolean"
          },
          "is_daytime": {
            "type": "boolean"
          },
          "temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "apparent_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "wetbulb_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "windchill_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "relative_humidity": {
            "type": "number"
          },
          "dewpoint": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "wind": {
            "type": "object",
            "properties": {
              "direction": {
                "type": "object",
                "properties": {
                  "degrees": {
                    "type": "number"
                  },
                  "localized": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "degrees",
                  "localized"
                ]
              },
              "speed": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              },
              "gust": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              }
            },
            "required": [
              "direction",
              "speed",
              "gust"
            ]
          },
          "visibility": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              },
              "obstructions": {
                "type": "string"
              }
            },
            "required": [
              "value",
              "unit",
              "obstructions"
            ]
          },
          "cloud_cover": {
            "type": "number"
          },
          "ceiling": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "pressure": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              },
              "direction": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit",
              "direction"
            ]
          }
        },
        "required": [
          "effective_coordinates",
          "units",
          "timestamp",
          "phrase",
          "icon",
          "is_raining",
          "is_daytime",
          "temperature",
          "apparent_temperature",
          "wetbulb_temperature",
          "windchill_temperature",
          "relative_humidity",
          "dewpoint",
          "wind",
          "visibility",
          "cloud_cover",
          "ceiling",
          "pressure"
        ],
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "timestamp": 1606150620,
            "phrase": "Mostly sunny",
            "icon": 2,
            "is_raining": false,
            "is_daytime": true,
            "temperature": {
              "value": 30,
              "unit": "F"
            },
            "apparent_temperature": {
              "value": 30,
              "unit": "F"
            },
            "wetbulb_temperature": {
              "value": 28,
              "unit": "F"
            },
            "windchill_temperature": {
              "value": 27,
              "unit": "F"
            },
            "relative_humidity": 71,
            "dewpoint": {
              "value": 22,
              "unit": "F"
            },
            "wind": {
              "direction": {
                "degrees": 113,
                "localized": "ESE"
              },
              "speed": {
                "value": 3,
                "unit": "mi/h"
              },
              "gust": {
                "value": 6,
                "unit": "mi/h"
              }
            },
            "visibility": {
              "value": 10,
              "unit": "mi",
              "obstructions": ""
            },
            "cloud_cover": 14,
            "ceiling": {
              "value": 40000,
              "unit": "ft"
            },
            "pressure": {
              "value": 30.37,
              "unit": "inHg",
              "direction": "Steady"
            }
          }
        },
        "title": "Weather Current Conditions",
        "x-tags": [
          "Object Models"
        ]
      },
      "Weather-Alerts": {
        "description": "",
        "type": "object",
        "title": "Weather Alert Listing",
        "x-tags": [
          "Object Models"
        ],
        "properties": {
          "count": {
            "type": "number"
          },
          "effective_coordinates": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Weather-Alert-Detail"
            }
          }
        },
        "required": [
          "count",
          "effective_coordinates",
          "data"
        ],
        "x-examples": {
          "Example": {
            "count": 1,
            "effective_coordinates": {
              "latitude": 47.8877148,
              "longitude": -124.6237354
            },
            "data": [
              {
                "id": 2203972,
                "category": "FLOOD",
                "description": "High Surf Advisory",
                "source": "U.S. National Weather Service",
                "areas": [
                  {
                    "name": "North Coast",
                    "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                    "status": "New",
                    "span": {
                      "start": 1606284000,
                      "end": 1606370400
                    },
                    "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                  }
                ]
              }
            ]
          }
        }
      },
      "Weather-Alert-Detail": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "category": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "source": {
            "type": "string",
            "minLength": 1
          },
          "areas": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "required": [
                "name",
                "summary",
                "status",
                "details"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "summary": {
                  "type": "string",
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "minLength": 1
                },
                "span": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "start",
                    "end"
                  ]
                },
                "details": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        },
        "required": [
          "id",
          "category",
          "description",
          "source",
          "areas"
        ],
        "x-examples": {
          "Example": {
            "id": 2203972,
            "category": "FLOOD",
            "description": "High Surf Advisory",
            "source": "U.S. National Weather Service",
            "areas": [
              {
                "name": "North Coast",
                "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                "status": "New",
                "span": {
                  "start": 1606284000,
                  "end": 1606370400
                },
                "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
              }
            ]
          }
        },
        "title": "Weather Alert Details",
        "x-tags": [
          "Object Models"
        ]
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      }
    }
  },
  "tags": [
    {
      "name": "Manage Sites"
    },
    {
      "name": "Addresses"
    },
    {
      "name": "Utilities"
    },
    {
      "name": "Buildings"
    },
    {
      "name": "Weather"
    }
  ]
}