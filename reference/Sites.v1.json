{
  "openapi": "3.0.0",
  "info": {
    "title": "Sites",
    "version": "v1.2.2",
    "description": "The Sites API provides endpoints for site and building management, including:\n* Creating & managing sites & associated buildings\n* Creating & managing addresses\n* Viewing current and forecasted weather conditions\n* Viewing timezone details for an IANA Timezone ID\n\n## Site Types\nSites are of one of two types: \n\n* A `building` is a site composed of a single building and can be assigned an address and contacts.\n\n* A `campus` is a high-level collection of buildings. A campus cannot be assigned an addressis or contacts.\n\n## Quotas and Licensing\nSite management is a paid feature. Physical sites are subject to quota availability. Virtual sites and buildings are not measured against a pre-defined quota but require a seperate license. These requirments are outlined in the various endpoint docs.\n\nIf insufficient quota or licensing exists for the specified site type, a `403 Forbidden` error will be thrown and the site will not be created. ",
    "termsOfService": "https://www.counterbalance.io/legal/api-terms",
    "contact": {
      "name": "Taylor Vick",
      "email": "support@counterbalance.io"
    }
  },
  "servers": [
    {
      "url": "https://api.counterbalance.io",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/site": {
      "get": {
        "summary": "List Sites",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Site-Listing"
          }
        },
        "operationId": "get-site-list",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "description": "Retrieve a list of sites\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:list`\n\n### Filtering Results\nA combination of one or more query parameters may be used to filter returned data. Query parameters are stacked such that using multiple parameters will result in a narrower data set.\n\nWildcard searches are permitted on all query parameters. Wildcard searches are case insensitive and all data is forced to lowercase for matching purposes. See usage examples below.\n\n<!--\ntitle: \"Site Code Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?code=*MN*\n```\n<!--\ntitle: \"Site Name Wildcard Search\"\nlineNumbers: false\n-->\n```text\nhttps://api.counterbalance.io/v1/site?name=*elementary*\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "description": "Filter results by site code. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Filter results by site name. Accepts * wildcard searches."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "description",
            "description": "Filter sites by description. Accepts * wildcard searches."
          }
        ]
      },
      "post": {
        "summary": "Create Site",
        "operationId": "create-site",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Site-Object"
          }
        },
        "description": "Create a new site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:create`\n\n> **Heads Up** This endpoint is subject to `site` quota availabilty",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the new site"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "A unique code to identify the site"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the site"
                  },
                  "year_built": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Post-Create-Site-Body"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Manage Sites"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/jso"
            },
            "in": "header",
            "name": "Content-Type"
          }
        ]
      }
    },
    "/v1/site/{siteId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/siteId"
        }
      ],
      "get": {
        "summary": "Get Site",
        "tags": [
          "Manage Sites"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Site-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "operationId": "get-site",
        "description": "Retrieve a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Site",
        "operationId": "update-site",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Site-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Update a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:update`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The name of the site"
                  },
                  "code": {
                    "type": "string",
                    "description": "The site's unique ID code",
                    "maxLength": 32
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the site",
                    "maxLength": 300
                  },
                  "year_built": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Seattle HQ",
                    "code": "SEA"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Manage Sites"
        ]
      },
      "delete": {
        "summary": "Delete Site",
        "operationId": "delete-site",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Site-Not-Empty"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Delete a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:site:*`,`sites:site:delete`\n\n<!--theme: info -->\n> **Heads Up** Specified site must be void of any associated objects (floors, rooms, equipment, etc) otherwise the delete operation will fail\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Manage Sites"
        ]
      }
    },
    "/v1/site/address/{addressId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/addressId"
        }
      ],
      "get": {
        "summary": "Get Address",
        "tags": [
          "Addresses"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Address-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "operationId": "get-address",
        "description": "### Synopsis\nRetrieve the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Address",
        "operationId": "update-address",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Address-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "### Synopsis\nUpdate the details for the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:update`",
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": ""
                  },
                  "address": {
                    "type": "string",
                    "description": "Address line one"
                  },
                  "extended_address": {
                    "type": "string",
                    "description": "Address line two"
                  },
                  "locality": {
                    "type": "string",
                    "description": "The neighborhood name"
                  },
                  "city": {
                    "type": "string"
                  },
                  "county": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "number"
                  },
                  "country": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "IANA timezone ID"
                  },
                  "offset": {
                    "description": "UTC Offset in seconds",
                    "type": "number"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "extended_address": "Suite 800"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Addresses"
        ]
      },
      "delete": {
        "summary": "Delete Address",
        "operationId": "delete-address",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "### Synopsis\nDelete the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:address:*`,`sites:address:delete`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/address/{addressId}/operation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "addressId",
          "in": "path",
          "required": true,
          "description": "A valid address UUID"
        }
      ],
      "post": {
        "summary": "Perform Address Operations",
        "operationId": "address-operations",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Address-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          }
        },
        "description": "### Synopsis\nPerform operations on the specified address\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:site:*`,`sites:address:*`,`sites:address:update`\n\n### Supported Operations\nThe following operations are currently supported:\n\n#### Address Normalization\nAn existing address object can be normalized or re-normalized by specifying the operation as `normalize`. The address' existing lines, city, and state values are used to generate a normalization query and updates are performed based on these values. If normalization data is incorrect, try adjusting these parameters and re-normalizing. \n\nWhen an address is normalized, the following properties are looked up and overridden: `city`,`state`,`latitude`,`longitude`,`postcode`,`locality`,`county`,`country`,`timezone`\n",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "enum": [
                      "normalize"
                    ],
                    "description": "The operation to perform"
                  }
                },
                "required": [
                  "operation"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "operation": "normalize"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/v1/site/address": {
      "parameters": [],
      "put": {
        "summary": "Add Address to Site or Building",
        "operationId": "create-address",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-Object"
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Address-Object"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Address-Already-Exists"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "### Synopsis\nCreate a new address object and attach it to the specified site\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ \n  \n  _When specifying a site ID:_ `*`,`sites:*`,`sites:site:*`,`sites:site:update`\n\n\n### Address Geocoding\nBy default, new addresses are geocoded to determine their GPS coordinates, timezone, and to fill-in various extended properties such as the locality, country, and ZIP or postcode. \n\nGeocoding is an optional process and can be skipped by setting `geocode` to `false` in the request body. If geocoding is skipped, the following additional body parameters become required: `county`, `country`, `postcode`, `timezone`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "A description of the address"
                  },
                  "street": {
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 1,
                    "description": "An array of address lines, up to two",
                    "items": {}
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 120,
                    "description": "The city name"
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The state name abbreviation"
                  },
                  "locality": {
                    "type": "string",
                    "maxLength": 96,
                    "description": "The name of the neighborhood"
                  },
                  "geocode": {
                    "type": "boolean",
                    "description": "Switch to enable/disable address geocoding"
                  },
                  "county": {
                    "type": "string",
                    "description": "The name of the county",
                    "maxLength": 120
                  },
                  "country": {
                    "type": "string",
                    "description": "The ISO 3166 alpha-3 country code (USA, CAN, etc)",
                    "maxLength": 3
                  },
                  "postcode": {
                    "type": "string",
                    "maxLength": 10,
                    "description": "*Required if Geocode is disabled*"
                  },
                  "timezone": {
                    "type": "string",
                    "maxLength": 90,
                    "description": "An IANA timezone code for the address"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The longitude value of the address"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The latitude value of the address"
                  }
                },
                "required": [
                  "street",
                  "city",
                  "state"
                ]
              },
              "examples": {
                "Example with Geocoding": {
                  "value": {
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA"
                  }
                },
                "Example without Geocoding": {
                  "value": {
                    "geocode": false,
                    "description": "Main Address",
                    "street": [
                      "400 Broad Street"
                    ],
                    "city": "Seattle",
                    "state": "WA",
                    "locality": "Lower Queen Anne",
                    "county": "King",
                    "country": "USA",
                    "postcode": "98119",
                    "timezone": "America/Los_Angeles"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@site",
            "description": "A valid site UUID for which to assign this address"
          }
        ]
      }
    },
    "/v1/site/weather/forecast": {
      "get": {
        "summary": "Get Forecast",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Forecast"
                },
                "examples": {
                  "Response (Imperial Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "37.79513",
                        "longitude": "-122.40299"
                      },
                      "units": "imperial",
                      "summary": "Pleasant Sunday",
                      "forecasts": [
                        {
                          "date": "2021-04-13T14:00:00+0000",
                          "sources": [
                            "AccuWeather"
                          ],
                          "air_quality": {
                            "airquality": {
                              "value": 53,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "grass": {
                              "value": 110,
                              "rating": "High",
                              "rating_value": 3
                            },
                            "mold": {
                              "value": 3250,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "ragweed": {
                              "value": 30,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "tree": {
                              "value": 50,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "uvindex": {
                              "value": 7,
                              "rating": "High",
                              "rating_value": 3
                            }
                          },
                          "hours_of_sun": 7,
                          "temperature": {
                            "minimum": {
                              "value": 50,
                              "unit": "F"
                            },
                            "maximum": {
                              "value": 61,
                              "unit": "F"
                            }
                          },
                          "day": {
                            "icon": 4,
                            "phrases": {
                              "long": "Areas of low clouds, then some sun",
                              "short": "Partly sunny"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 1,
                              "thunderstorm": 0,
                              "rain": 0,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 256,
                                "localized": "WSW"
                              },
                              "speed": {
                                "value": 11,
                                "unit": "mi/h"
                              },
                              "gust": {
                                "value": 18,
                                "unit": "mi/h",
                                "direction": "WSW"
                              }
                            },
                            "cloud_cover": 51
                          },
                          "night": {
                            "icon": 33,
                            "phrases": {
                              "long": "Clear",
                              "short": "Clear"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 1,
                              "thunderstorm": 0,
                              "rain": 0,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 192,
                                "localized": "SSW"
                              },
                              "speed": {
                                "value": 8,
                                "unit": "mi/h"
                              },
                              "gust": {
                                "value": 16,
                                "unit": "mi/h",
                                "direction": "WSW"
                              }
                            },
                            "cloud_cover": 9
                          }
                        }
                      ]
                    }
                  },
                  "Response (Metric Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "37.79513",
                        "longitude": "-122.40299"
                      },
                      "units": "metric",
                      "summary": "Pleasant Sunday",
                      "forecasts": [
                        {
                          "date": "2021-04-13T14:00:00+0000",
                          "sources": [
                            "AccuWeather"
                          ],
                          "air_quality": {
                            "airquality": {
                              "value": 53,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "grass": {
                              "value": 110,
                              "rating": "High",
                              "rating_value": 3
                            },
                            "mold": {
                              "value": 3250,
                              "rating": "Low",
                              "rating_value": 1
                            },
                            "ragweed": {
                              "value": 30,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "tree": {
                              "value": 50,
                              "rating": "Moderate",
                              "rating_value": 2
                            },
                            "uvindex": {
                              "value": 7,
                              "rating": "High",
                              "rating_value": 3
                            }
                          },
                          "hours_of_sun": 7,
                          "temperature": {
                            "minimum": {
                              "value": 9,
                              "unit": "C"
                            },
                            "maximum": {
                              "value": 16,
                              "unit": "C"
                            }
                          },
                          "day": {
                            "icon": 4,
                            "phrases": {
                              "long": "Areas of low clouds, then some sun",
                              "short": "Partly sunny"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 1,
                              "thunderstorm": 0,
                              "rain": 0,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 256,
                                "localized": "WSW"
                              },
                              "speed": {
                                "value": 18,
                                "unit": "km/h"
                              },
                              "gust": {
                                "value": 29,
                                "unit": "km/h",
                                "direction": "WSW"
                              }
                            },
                            "cloud_cover": 51
                          },
                          "night": {
                            "icon": 33,
                            "phrases": {
                              "long": "Clear",
                              "short": "Clear"
                            },
                            "is_raining": false,
                            "probabilities": {
                              "precipitation": 1,
                              "thunderstorm": 0,
                              "rain": 0,
                              "snow": 1,
                              "ice": 0
                            },
                            "wind": {
                              "direction": {
                                "degrees": 192,
                                "localized": "SSW"
                              },
                              "speed": {
                                "value": 13,
                                "unit": "km/h"
                              },
                              "gust": {
                                "value": 25,
                                "unit": "km/h",
                                "direction": "WSW"
                              }
                            },
                            "cloud_cover": 9
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Too Many Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID, but not both",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Not Enough Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Duration": {
                    "value": {
                      "error": {
                        "message": "9 is not a valid duration",
                        "console": "Invalid duration value. Allowed value(s): 1, 5, 10, or 15",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-weather-forecast",
        "description": "Retrieve a detailed daily weather forecast\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:forecast`\n* Licensed Feature: `weather_forecasts`\n\n### Specifying the Location\nWeather forecasts can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `@address` are mutually exclusive. Passing more than one will result in an error_\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the weather forecast for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Get the weather forecast for the specified address ID"
          },
          {
            "schema": {
              "type": "integer",
              "default": 5,
              "enum": [
                1,
                5,
                10,
                15
              ]
            },
            "in": "query",
            "name": "duration",
            "description": "The number of forecast outlook days to return"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "metric",
            "description": "Return the results with metric units instead of imperial units"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/weather/current-conditions": {
      "get": {
        "summary": "Get Current Conditions",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Current-Conditions"
                },
                "examples": {
                  "Response (Imperial Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "37.79513",
                        "longitude": "-122.40299"
                      },
                      "units": "imperial",
                      "timestamp": "2021-04-13T14:15:00+0000",
                      "phrase": "Mostly cloudy",
                      "icon": 6,
                      "is_raining": false,
                      "is_daytime": true,
                      "temperature": {
                        "value": 49,
                        "unit": "F"
                      },
                      "apparent_temperature": {
                        "value": 52,
                        "unit": "F"
                      },
                      "wetbulb_temperature": {
                        "value": 48,
                        "unit": "F"
                      },
                      "windchill_temperature": {
                        "value": 46,
                        "unit": "F"
                      },
                      "relative_humidity": 90,
                      "dewpoint": {
                        "value": 46,
                        "unit": "F"
                      },
                      "wind": {
                        "direction": {
                          "degrees": 248,
                          "localized": "WSW"
                        },
                        "speed": {
                          "value": 6,
                          "unit": "mi/h"
                        },
                        "gust": {
                          "value": 15,
                          "unit": "mi/h"
                        }
                      },
                      "visibility": {
                        "value": 5,
                        "unit": "mi",
                        "obstructions": ""
                      },
                      "cloud_cover": 78,
                      "ceiling": {
                        "value": 5100,
                        "unit": "ft"
                      },
                      "pressure": {
                        "value": 29.87,
                        "unit": "inHg",
                        "direction": "Rising"
                      }
                    }
                  },
                  "Response (Metric Units)": {
                    "value": {
                      "effective_coordinates": {
                        "latitude": "37.79513",
                        "longitude": "-122.40299"
                      },
                      "units": "metric",
                      "timestamp": "2021-04-13T14:15:00+0000",
                      "phrase": "Mostly cloudy",
                      "icon": 6,
                      "is_raining": false,
                      "is_daytime": true,
                      "temperature": {
                        "value": 9,
                        "unit": "C"
                      },
                      "apparent_temperature": {
                        "value": 11,
                        "unit": "C"
                      },
                      "wetbulb_temperature": {
                        "value": 8,
                        "unit": "C"
                      },
                      "windchill_temperature": {
                        "value": 7,
                        "unit": "C"
                      },
                      "relative_humidity": 90,
                      "dewpoint": {
                        "value": 8,
                        "unit": "C"
                      },
                      "wind": {
                        "direction": {
                          "degrees": 248,
                          "localized": "WSW"
                        },
                        "speed": {
                          "value": 10,
                          "unit": "km/h"
                        },
                        "gust": {
                          "value": 24,
                          "unit": "km/h"
                        }
                      },
                      "visibility": {
                        "value": 8,
                        "unit": "km",
                        "obstructions": ""
                      },
                      "cloud_cover": 78,
                      "ceiling": {
                        "value": 1554,
                        "unit": "m"
                      },
                      "pressure": {
                        "value": 1011.5,
                        "unit": "mb",
                        "direction": "Rising"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-current-weather-conditions",
        "description": "### Synposis\nRetrieve detailed current weather conditions\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:currently`\n* Licensed Feature: `weather_conditions`\n\n### Specifying the Location\nWeather conditions can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `@address` are mutually exclusive. Passing more than one will resultin an error_\n\n### Units\nBy default, data is returned in Imperial units. To return data in Metric units, pass the `metric` query parameter and set it to _true_. \n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the current conditions for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Get the current conditions for the specified address ID"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "in": "query",
            "name": "metric",
            "description": "Return the results with metric units instead of imperial units"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/weather/alerts": {
      "get": {
        "summary": "Get Alerts",
        "tags": [
          "Weather"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather-Alerts"
                },
                "examples": {
                  "Response": {
                    "value": {
                      "count": 1,
                      "effective_coordinates": {
                        "latitude": 47.8877148,
                        "longitude": -124.6237354
                      },
                      "data": [
                        {
                          "id": 2203972,
                          "category": "FLOOD",
                          "description": "High Surf Advisory",
                          "source": "U.S. National Weather Service",
                          "areas": [
                            {
                              "name": "North Coast",
                              "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                              "status": "New",
                              "span": {
                                "start": "2021-04-13T14:00:00+0000",
                                "end": "2021-04-13T14:00:00+0000"
                              },
                              "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either coordinates or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Address Not Found": {
                    "value": {
                      "error": {
                        "message": "Address not found",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 could not be found in the database",
                        "code": 404
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID 8ac7d5dc-803d-40ac-bc37-16c0dbffe5d8 is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-weather-alerts",
        "description": "Retrieve current sever weather alerts and advisories\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:weather:*`,`sites:weather:alerts`\n* Licensed Feature: `weather_alerts`\n\n### Specifying the Location\nWeather alerts and advisories can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n<!-- theme: warning-->\n> _Parameters `coordinates` and `address` are mutually exclusive. Passing more than one will result in an error_\n\n### Language\nBy default, data is returned in English. To return data in another language, pass the `langugage` query parameter and set it to a valid IETF language code.\n\n<!-- theme: warning-->\n> _The API supports any valid IETF language code but alert data may not be available in the specified language_",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "47.620506,-122.349277"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get weather alerts for the specified lat/lon position"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Get weather alerts for the specified address ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "language",
            "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive."
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/utilities/timezone": {
      "get": {
        "summary": "Get Timezone Details",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Get-Timezone-Object"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "No Parameters": {
                    "value": {
                      "error": {
                        "message": "Invalid request",
                        "console": "Specify either an IANA timezone ID, coordinates, or an address ID",
                        "code": 400
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Address-Not-Found"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/Error-Response.v1.yaml"
                },
                "examples": {
                  "Invalid Parameter Combination": {
                    "value": {
                      "error": {
                        "message": "Invalid parameter combination",
                        "console": "Parameters timezone, coordinates, and address are mutually exclusive. Specify only one.",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  },
                  "Invalid Address Geocoding": {
                    "value": {
                      "error": {
                        "message": "Invalid address geocoding",
                        "console": "The address ID ... is not geocoded and we have no coordinates to check",
                        "code": 409
                      },
                      "logging_hash": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-timezone",
        "description": "### Synopsis\nRetrieve timezone details including the current time\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:utilities:*`,`sites:utilities:timezone`\n* Licensed Feature: `sites_base`\n\n### Specifying Coordinates or Address ID\nTimezone details can be obtained for a specified set of coordinates or by specifying a geocoded address object ID. Either the `coordinates` or `@address` query parameters must be passed, but not both.\n\nIf the specified address ID has not been geocoded, an error will be returned.\n\n### Specifying am IANA Timezone ID\nTimezone details can be obtained for any Timezone by specifying the IANA timezone ID\n\n<!-- theme: warning-->\n> _Parameters `timezone`, `coordinates` and `@address` are mutually exclusive. Passing more than one will result in an error_\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "timezone",
            "description": "An IANA timezone ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "coordinates",
            "description": "Get the timezone for the specified coordinates"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "@address",
            "description": "Get the timezone for the specified address ID"
          }
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/v1/site/floor": {
      "get": {
        "summary": "List Floors",
        "tags": [
          "Floors"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Floor-Listing"
          }
        },
        "operationId": "list-floors",
        "description": "Retrieve a list of floors\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@siteId"
          }
        ]
      },
      "post": {
        "summary": "Create Floor",
        "operationId": "create-floor",
        "responses": {
          "201": {
            "$ref": "#/components/responses/200-Floor-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Site-Not-Found"
          }
        },
        "description": "Create a new floor and assign it to a site\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:create`",
        "tags": [
          "Floors"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "minLength": 1,
                    "description": "A unique code for the floor",
                    "example": "Floor 1, Main Floor, Basement"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "gross_floor_area": {
                    "type": "number"
                  },
                  "below_grade": {
                    "type": "boolean",
                    "description": "Indicate if the floor is below grade. Default is `false`"
                  },
                  "@site": {
                    "type": "string",
                    "format": "uuid",
                    "description": "A valid site UUID that will contain this floor"
                  }
                },
                "required": [
                  "code",
                  "@site"
                ]
              },
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Create-Floor-Body"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/v1/site/floor/{floorId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/floorId"
        }
      ],
      "get": {
        "summary": "Get Floor",
        "tags": [
          "Floors"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Floor-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "operationId": "get-floor",
        "description": "Retrieve a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Floor",
        "operationId": "update-floor",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Floor-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Update a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:update`",
        "tags": [
          "Floors"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "gross_floor_area": {
                    "type": "integer"
                  },
                  "below_grade": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Floor",
        "operationId": "delete-floor",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Floor-Not-Empty"
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        },
        "description": "Delete a floor\n\n**Required Permissions:** `*`,`sites:*`,`sites:floor:*`,`sites:floor:delete`\n\n<!-- theme: danger -->\n> **Danger** This cannot be undone!",
        "tags": [
          "Floors"
        ]
      }
    },
    "/v1/site/room": {
      "get": {
        "summary": "List Rooms",
        "tags": [
          "Rooms"
        ],
        "operationId": "list-rooms",
        "description": "### Synopsis\nRetrieve a list of rooms available to the authenticated user\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:list`",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/@siteId"
          },
          {
            "$ref": "#/components/parameters/@floorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Room-Object"
                      }
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Room-Object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Room",
        "operationId": "create-room",
        "description": "### Synopsis\nCreate a new room and assign it to a floor\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:create`\n* Licensed Feature: `sites_base`\n\n### Defining Room Occupancy\nThe room occupancy classification must be specifid in the `occupancy` body parameter. One of the [International Building Code (IBC)](https://buildingcodetrainer.com/building-occupancy-classification-occupancy-types-explained/) occupancy codes is required and all occupancies are considered valid values.\n\n### Defining Room Area\nThe `area` body parameter is required and should contain the net area of the room in localized units (square meters or square feet). Only integer values are permitted.",
        "tags": [
          "Rooms"
        ],
        "parameters": [],
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "number": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "area": {
                    "type": "number",
                    "description": "The net area of the room in localized units (integers only)",
                    "format": "double"
                  },
                  "@floor": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid",
                    "description": "A valid floor UUID that will contain this room"
                  },
                  "occupancy": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The IBC occupancy classification of this room",
                    "enum": [
                      "A-1",
                      "A-2",
                      "A-3",
                      "A-4",
                      "A-5",
                      "B",
                      "E",
                      "F-1",
                      "F-2",
                      "H-1",
                      "H-2",
                      "H-3",
                      "H-4",
                      "H-5",
                      "I-1",
                      "I-2",
                      "I-3",
                      "I-4",
                      "M",
                      "R-1",
                      "R-2",
                      "R-3",
                      "R-3.1",
                      "R-4",
                      "S-1",
                      "S-2",
                      "U"
                    ]
                  }
                },
                "required": [
                  "name",
                  "number",
                  "area",
                  "@floor",
                  "occupancy"
                ]
              },
              "examples": {
                "Response": {
                  "$ref": "#/components/examples/Create-Room-Body"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room-Object"
                },
                "examples": {
                  "Response": {
                    "$ref": "#/components/examples/Room-Object"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Floor-Not-Found"
          }
        }
      }
    },
    "/v1/site/room/{roomId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/roomId"
        }
      ],
      "get": {
        "summary": "Get Room",
        "tags": [
          "Rooms"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Room-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "operationId": "get-room",
        "description": "### Synopsis\nRetrieve the details for the specified room\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:read`",
        "security": [
          {
            "Bearer Token": []
          }
        ]
      },
      "patch": {
        "summary": "Update Room",
        "operationId": "update-room",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-Room-Object"
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "tags": [
          "Rooms"
        ],
        "description": "### Synopsis\nUpdate the details for the specified room\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:update`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the room"
                  },
                  "number": {
                    "type": "string",
                    "description": "The room number"
                  },
                  "description": {
                    "type": "string",
                    "description": "The room description"
                  },
                  "occupancy": {
                    "type": "string",
                    "description": "The room occupancy classification"
                  },
                  "area": {
                    "type": "number",
                    "description": "The net area of the room"
                  },
                  "@floor": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The floor the room belongs to"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Circulation",
                    "occupancy": "B",
                    "area": 250,
                    "floor": "f1acf44a-62d2-42f3-8dad-b917de85d75c"
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete Room",
        "operationId": "delete-room",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-Room-Not-Found"
          }
        },
        "description": "### Synopsis\nDelete the specified room\n\n<!-- theme: danger -->\n> _**Heads Up** This cannot be undone!_\n\n### Prerequisites\nThe following prerequisites are required for this endpoint:\n* An active tenant account\n* Permissions _(at least one):_ `*`,`sites:*`,`sites:room:*`,`sites:room:delete`\n* Specified room must be void of any associated equipment",
        "tags": [
          "Rooms"
        ],
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Site-Object": {
        "description": "",
        "type": "object",
        "title": "Site Object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "created": {
            "type": "string",
            "minLength": 1
          },
          "last_modified": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "@address": {
            "type": "string",
            "minLength": 1
          },
          "attributes": {
            "type": "object",
            "required": [
              "year_built",
              "floor_count",
              "room_count",
              "gross_floor_area",
              "net_room_area"
            ],
            "properties": {
              "year_built": {
                "type": "string",
                "minLength": 1
              },
              "floor_count": {
                "type": "number"
              },
              "room_count": {
                "type": "number"
              },
              "gross_floor_area": {
                "type": "number"
              },
              "net_room_area": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "id",
          "created",
          "code",
          "name",
          "description",
          "@address",
          "attributes"
        ]
      },
      "Address-Object": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "minLength": 1,
            "readOnly": true
          },
          "last_modified": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          },
          "@site": {
            "type": "string",
            "minLength": 1,
            "format": "uuid"
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "locality": {
            "type": "string",
            "minLength": 1
          },
          "city": {
            "type": "string",
            "minLength": 1
          },
          "county": {
            "type": "string",
            "minLength": 1
          },
          "state": {
            "type": "string",
            "minLength": 1
          },
          "postcode": {
            "type": "number"
          },
          "country": {
            "type": "string",
            "minLength": 1
          },
          "formatted": {
            "type": "string",
            "minLength": 1
          },
          "geolocation": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "timezone": {
            "type": "string",
            "minLength": 1
          },
          "designations": {
            "type": "object",
            "required": [
              "primary_mailing",
              "primary_billing"
            ],
            "properties": {
              "primary_mailing": {
                "type": "boolean"
              },
              "primary_billing": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "created",
          "@site",
          "lines",
          "locality",
          "city",
          "county",
          "state",
          "postcode",
          "country",
          "formatted",
          "geolocation",
          "timezone",
          "designations"
        ],
        "title": "Address Object"
      },
      "Timezone-Object": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "effective_coordinates": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "wall_time": {
                "type": "string",
                "minLength": 1
              },
              "utc_offset": {
                "type": "number"
              },
              "is_dst": {
                "type": "boolean"
              },
              "tag": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "wall_time",
              "utc_offset",
              "is_dst",
              "tag"
            ]
          },
          "names": {
            "type": "object",
            "properties": {
              "ISO6391_language_code": {
                "type": "string",
                "minLength": 1
              },
              "generic": {
                "type": "string",
                "minLength": 1
              },
              "standard": {
                "type": "string",
                "minLength": 1
              },
              "daylight": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "ISO6391_language_code",
              "generic",
              "standard",
              "daylight"
            ]
          }
        },
        "required": [
          "id",
          "effective_coordinates",
          "current",
          "names"
        ],
        "title": "Timezone Object"
      },
      "Daily-Forecast-Object": {
        "description": "",
        "type": "object",
        "properties": {
          "date": {
            "type": "number"
          },
          "sources": {
            "type": "array",
            "items": {
              "required": [],
              "properties": {}
            }
          },
          "air_quality": {
            "type": "object",
            "properties": {
              "airquality": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "grass": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "mold": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "ragweed": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "tree": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              },
              "uvindex": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "rating": {
                    "type": "string",
                    "minLength": 1
                  },
                  "rating_value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "rating",
                  "rating_value"
                ]
              }
            },
            "required": [
              "airquality",
              "grass",
              "mold",
              "ragweed",
              "tree",
              "uvindex"
            ]
          },
          "hours_of_sun": {
            "type": "number"
          },
          "temperature": {
            "type": "object",
            "properties": {
              "minimum": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              },
              "maximum": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              }
            },
            "required": [
              "minimum",
              "maximum"
            ]
          },
          "day": {
            "type": "object",
            "properties": {
              "icon": {
                "type": "number"
              },
              "phrases": {
                "type": "object",
                "properties": {
                  "long": {
                    "type": "string",
                    "minLength": 1
                  },
                  "short": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "long",
                  "short"
                ]
              },
              "is_raining": {
                "type": "boolean"
              },
              "probabilities": {
                "type": "object",
                "properties": {
                  "precipitation": {
                    "type": "number"
                  },
                  "thunderstorm": {
                    "type": "number"
                  },
                  "rain": {
                    "type": "number"
                  },
                  "snow": {
                    "type": "number"
                  },
                  "ice": {
                    "type": "number"
                  }
                },
                "required": [
                  "precipitation",
                  "thunderstorm",
                  "rain",
                  "snow",
                  "ice"
                ]
              },
              "wind": {
                "type": "object",
                "properties": {
                  "direction": {
                    "type": "object",
                    "properties": {
                      "degrees": {
                        "type": "number"
                      },
                      "localized": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "degrees",
                      "localized"
                    ]
                  },
                  "speed": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit"
                    ]
                  },
                  "gust": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      },
                      "direction": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit",
                      "direction"
                    ]
                  }
                },
                "required": [
                  "direction",
                  "speed",
                  "gust"
                ]
              },
              "cloud_cover": {
                "type": "number"
              }
            },
            "required": [
              "icon",
              "phrases",
              "is_raining",
              "probabilities",
              "wind",
              "cloud_cover"
            ]
          },
          "night": {
            "type": "object",
            "properties": {
              "icon": {
                "type": "number"
              },
              "phrases": {
                "type": "object",
                "properties": {
                  "long": {
                    "type": "string",
                    "minLength": 1
                  },
                  "short": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "long",
                  "short"
                ]
              },
              "is_raining": {
                "type": "boolean"
              },
              "probabilities": {
                "type": "object",
                "properties": {
                  "precipitation": {
                    "type": "number"
                  },
                  "thunderstorm": {
                    "type": "number"
                  },
                  "rain": {
                    "type": "number"
                  },
                  "snow": {
                    "type": "number"
                  },
                  "ice": {
                    "type": "number"
                  }
                },
                "required": [
                  "precipitation",
                  "thunderstorm",
                  "rain",
                  "snow",
                  "ice"
                ]
              },
              "wind": {
                "type": "object",
                "properties": {
                  "direction": {
                    "type": "object",
                    "properties": {
                      "degrees": {
                        "type": "number"
                      },
                      "localized": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "degrees",
                      "localized"
                    ]
                  },
                  "speed": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit"
                    ]
                  },
                  "gust": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string",
                        "minLength": 1
                      },
                      "direction": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "required": [
                      "value",
                      "unit",
                      "direction"
                    ]
                  }
                },
                "required": [
                  "direction",
                  "speed",
                  "gust"
                ]
              },
              "cloud_cover": {
                "type": "number"
              }
            },
            "required": [
              "icon",
              "phrases",
              "is_raining",
              "probabilities",
              "wind",
              "cloud_cover"
            ]
          }
        },
        "required": [
          "date",
          "sources",
          "air_quality",
          "hours_of_sun",
          "temperature",
          "day",
          "night"
        ],
        "title": "Daily Forecast",
        "x-examples": {
          "Example": {
            "date": 1606136400,
            "sources": [
              "AccuWeather"
            ],
            "air_quality": {
              "airquality": {
                "value": 75,
                "rating": "Moderate",
                "rating_value": 2
              },
              "grass": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "mold": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "ragweed": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "tree": {
                "value": 0,
                "rating": "Low",
                "rating_value": 1
              },
              "uvindex": {
                "value": 2,
                "rating": "Low",
                "rating_value": 1
              }
            },
            "hours_of_sun": 7,
            "temperature": {
              "minimum": {
                "value": 30,
                "unit": "F"
              },
              "maximum": {
                "value": 38,
                "unit": "F"
              }
            },
            "day": {
              "icon": 3,
              "phrases": {
                "long": "Times of clouds and sun",
                "short": "Times of clouds and sun"
              },
              "is_raining": false,
              "probabilities": {
                "precipitation": 4,
                "thunderstorm": 0,
                "rain": 3,
                "snow": 1,
                "ice": 0
              },
              "wind": {
                "direction": {
                  "degrees": 122,
                  "localized": "ESE"
                },
                "speed": {
                  "value": 4,
                  "unit": "mi/h"
                },
                "gust": {
                  "value": 10,
                  "unit": "mi/h",
                  "direction": "SE"
                }
              },
              "cloud_cover": 29
            },
            "night": {
              "icon": 22,
              "phrases": {
                "long": "Plenty of clouds with a coating to an inch of snow late",
                "short": "Overcast with snow late"
              },
              "is_raining": true,
              "probabilities": {
                "precipitation": 75,
                "thunderstorm": 0,
                "rain": 10,
                "snow": 75,
                "ice": 3
              },
              "wind": {
                "direction": {
                  "degrees": 139,
                  "localized": "SE"
                },
                "speed": {
                  "value": 9,
                  "unit": "mi/h"
                },
                "gust": {
                  "value": 13,
                  "unit": "mi/h",
                  "direction": "SE"
                }
              },
              "cloud_cover": 97
            }
          }
        },
        "x-tags": [
          "Object Models"
        ]
      },
      "Weather-Forecast": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "summary": "Snow between late tonight and tomorrow morning will accumulate 1-2 inches before changing to rain",
            "forecasts": [
              {
                "date": 1606136400,
                "sources": [
                  "AccuWeather"
                ],
                "air_quality": {
                  "airquality": {
                    "value": 75,
                    "rating": "Moderate",
                    "rating_value": 2
                  },
                  "grass": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "mold": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "ragweed": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "tree": {
                    "value": 0,
                    "rating": "Low",
                    "rating_value": 1
                  },
                  "uvindex": {
                    "value": 2,
                    "rating": "Low",
                    "rating_value": 1
                  }
                },
                "hours_of_sun": 7,
                "temperature": {
                  "minimum": {
                    "value": 30,
                    "unit": "F"
                  },
                  "maximum": {
                    "value": 38,
                    "unit": "F"
                  }
                },
                "day": {
                  "icon": 3,
                  "phrases": {
                    "long": "Times of clouds and sun",
                    "short": "Times of clouds and sun"
                  },
                  "is_raining": false,
                  "probabilities": {
                    "precipitation": 4,
                    "thunderstorm": 0,
                    "rain": 3,
                    "snow": 1,
                    "ice": 0
                  },
                  "wind": {
                    "direction": {
                      "degrees": 122,
                      "localized": "ESE"
                    },
                    "speed": {
                      "value": 4,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 10,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 29
                },
                "night": {
                  "icon": 22,
                  "phrases": {
                    "long": "Plenty of clouds with a coating to an inch of snow late",
                    "short": "Overcast with snow late"
                  },
                  "is_raining": true,
                  "probabilities": {
                    "precipitation": 75,
                    "thunderstorm": 0,
                    "rain": 10,
                    "snow": 75,
                    "ice": 3
                  },
                  "wind": {
                    "direction": {
                      "degrees": 139,
                      "localized": "SE"
                    },
                    "speed": {
                      "value": 9,
                      "unit": "mi/h"
                    },
                    "gust": {
                      "value": 13,
                      "unit": "mi/h",
                      "direction": "SE"
                    }
                  },
                  "cloud_cover": 97
                }
              }
            ]
          }
        },
        "title": "Weather Forecast",
        "x-tags": [
          "Object Models"
        ],
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "string",
                "minLength": 1
              },
              "longitude": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          "units": {
            "type": "string",
            "minLength": 1
          },
          "summary": {
            "type": "string",
            "minLength": 1
          },
          "forecasts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "": {
                  "$ref": "#/components/schemas/Daily-Forecast-Object"
                }
              }
            }
          }
        },
        "required": [
          "effective_coordinates",
          "units",
          "summary",
          "forecasts"
        ]
      },
      "Weather-Current-Conditions": {
        "description": "",
        "type": "object",
        "properties": {
          "effective_coordinates": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string",
                "minLength": 1
              },
              "longitude": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "latitude",
              "longitude"
            ]
          },
          "units": {
            "type": "string",
            "minLength": 1
          },
          "timestamp": {
            "type": "number"
          },
          "phrase": {
            "type": "string",
            "minLength": 1
          },
          "icon": {
            "type": "number"
          },
          "is_raining": {
            "type": "boolean"
          },
          "is_daytime": {
            "type": "boolean"
          },
          "temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "apparent_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "wetbulb_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "windchill_temperature": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "relative_humidity": {
            "type": "number"
          },
          "dewpoint": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "wind": {
            "type": "object",
            "properties": {
              "direction": {
                "type": "object",
                "properties": {
                  "degrees": {
                    "type": "number"
                  },
                  "localized": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "degrees",
                  "localized"
                ]
              },
              "speed": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              },
              "gust": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              }
            },
            "required": [
              "direction",
              "speed",
              "gust"
            ]
          },
          "visibility": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              },
              "obstructions": {
                "type": "string"
              }
            },
            "required": [
              "value",
              "unit",
              "obstructions"
            ]
          },
          "cloud_cover": {
            "type": "number"
          },
          "ceiling": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit"
            ]
          },
          "pressure": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "minLength": 1
              },
              "direction": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "value",
              "unit",
              "direction"
            ]
          }
        },
        "required": [
          "effective_coordinates",
          "units",
          "timestamp",
          "phrase",
          "icon",
          "is_raining",
          "is_daytime",
          "temperature",
          "apparent_temperature",
          "wetbulb_temperature",
          "windchill_temperature",
          "relative_humidity",
          "dewpoint",
          "wind",
          "visibility",
          "cloud_cover",
          "ceiling",
          "pressure"
        ],
        "x-examples": {
          "Example": {
            "effective_coordinates": {
              "latitude": "44.98588",
              "longitude": "-93.28069"
            },
            "units": "imperial",
            "timestamp": 1606150620,
            "phrase": "Mostly sunny",
            "icon": 2,
            "is_raining": false,
            "is_daytime": true,
            "temperature": {
              "value": 30,
              "unit": "F"
            },
            "apparent_temperature": {
              "value": 30,
              "unit": "F"
            },
            "wetbulb_temperature": {
              "value": 28,
              "unit": "F"
            },
            "windchill_temperature": {
              "value": 27,
              "unit": "F"
            },
            "relative_humidity": 71,
            "dewpoint": {
              "value": 22,
              "unit": "F"
            },
            "wind": {
              "direction": {
                "degrees": 113,
                "localized": "ESE"
              },
              "speed": {
                "value": 3,
                "unit": "mi/h"
              },
              "gust": {
                "value": 6,
                "unit": "mi/h"
              }
            },
            "visibility": {
              "value": 10,
              "unit": "mi",
              "obstructions": ""
            },
            "cloud_cover": 14,
            "ceiling": {
              "value": 40000,
              "unit": "ft"
            },
            "pressure": {
              "value": 30.37,
              "unit": "inHg",
              "direction": "Steady"
            }
          }
        },
        "title": "Weather Current Conditions",
        "x-tags": [
          "Object Models"
        ]
      },
      "Weather-Alerts": {
        "description": "",
        "type": "object",
        "title": "Weather Alert Listing",
        "x-tags": [
          "Object Models"
        ],
        "properties": {
          "count": {
            "type": "number"
          },
          "effective_coordinates": {
            "type": "object",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Weather-Alert-Detail"
            }
          }
        },
        "required": [
          "count",
          "effective_coordinates",
          "data"
        ],
        "x-examples": {
          "Example": {
            "count": 1,
            "effective_coordinates": {
              "latitude": 47.8877148,
              "longitude": -124.6237354
            },
            "data": [
              {
                "id": 2203972,
                "category": "FLOOD",
                "description": "High Surf Advisory",
                "source": "U.S. National Weather Service",
                "areas": [
                  {
                    "name": "North Coast",
                    "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                    "status": "New",
                    "span": {
                      "start": 1606284000,
                      "end": 1606370400
                    },
                    "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
                  }
                ]
              }
            ]
          }
        }
      },
      "Weather-Alert-Detail": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "category": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "source": {
            "type": "string",
            "minLength": 1
          },
          "areas": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "required": [
                "name",
                "summary",
                "status",
                "details"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "summary": {
                  "type": "string",
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "minLength": 1
                },
                "span": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "start",
                    "end"
                  ]
                },
                "details": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        },
        "required": [
          "id",
          "category",
          "description",
          "source",
          "areas"
        ],
        "x-examples": {
          "Example": {
            "id": 2203972,
            "category": "FLOOD",
            "description": "High Surf Advisory",
            "source": "U.S. National Weather Service",
            "areas": [
              {
                "name": "North Coast",
                "summary": "High Surf Advisory in effect from 10:00 PM PST until Wednesday, 10:00 PM PST.  Source: U.S. National Weather Service",
                "status": "New",
                "span": {
                  "start": 1606284000,
                  "end": 1606370400
                },
                "details": "...HIGH SURF ADVISORY IN EFFECT FROM 10 PM THIS EVENING TO 10 PM\nPST WEDNESDAY...\n\n* WHAT...Large breaking waves of 18 to 21 feet expected in the\n  surf zone.\n\n* WHERE...North Coast and Central Coast.\n\n* WHEN...From 10 PM this evening to 10 PM PST Wednesday.\n\n* IMPACTS...Dangerous conditions along the coast and in the surf\n  zone. Localized beach erosion may also occur due to large waves.\n\nPRECAUTIONARY/PREPAREDNESS ACTIONS...\n\nLarge waves may break and run up beaches farther than usual. Keep\nyour distance from the coastline and never turn your back on the\nocean.\n\nInexperienced swimmers should remain out of the water due to\ndangerous surf conditions.\n\n&&"
              }
            ]
          }
        },
        "title": "Weather Alert Details",
        "x-tags": [
          "Object Models"
        ]
      },
      "Floor-Object": {
        "description": "",
        "type": "object",
        "title": "Floor Object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "created": {
            "type": "string",
            "minLength": 1
          },
          "last_modified": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          },
          "@site": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "required": [
              "below_grade",
              "gross_floor_area",
              "room_count",
              "net_room_area"
            ],
            "properties": {
              "below_grade": {
                "type": "boolean"
              },
              "gross_floor_area": {
                "type": "number"
              },
              "room_count": {
                "type": "number"
              },
              "net_room_area": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "id",
          "created",
          "@site",
          "code",
          "description",
          "attributes"
        ]
      },
      "Room-Object": {
        "description": "",
        "type": "object",
        "title": "Room Object",
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "created": {
            "type": "string",
            "minLength": 1
          },
          "last_modified": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          },
          "@site": {
            "type": "string",
            "minLength": 1
          },
          "@floor": {
            "type": "string",
            "minLength": 1
          },
          "number": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "attributes": {
            "type": "object",
            "required": [
              "occupancy",
              "area"
            ],
            "properties": {
              "occupancy": {
                "type": "string",
                "minLength": 1
              },
              "area": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "id",
          "created",
          "last_modified",
          "@site",
          "@floor",
          "number",
          "name",
          "description",
          "attributes"
        ]
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "type": "http",
        "scheme": "bearer",
        "description": ""
      }
    },
    "parameters": {
      "siteId": {
        "name": "siteId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid site UUID"
      },
      "addressId": {
        "name": "addressId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid address UUID"
      },
      "floorId": {
        "name": "floorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid floor UUID"
      },
      "roomId": {
        "name": "roomId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "A valid room UUID"
      },
      "@siteId": {
        "name": "@site",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated site UUID"
      },
      "@floorId": {
        "name": "@floor",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Filter results by their associated floor UUID"
      }
    },
    "examples": {
      "Site-Object-List": {
        "value": {
          "count": 4,
          "data": [
            {
              "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "created": "2021-02-05T03:13:05+0000",
              "code": "MSP",
              "name": "Minneapolis Office",
              "description": "",
              "address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
              "attributes": {
                "year_built": "1927",
                "floor_count": 1,
                "room_count": 8,
                "gross_floor_area": 18000,
                "net_room_area": 17850
              }
            },
            {
              "id": "723a9c16-1790-4386-b17b-54bc9ed6d901",
              "created": "2021-02-05T15:11:48+0000",
              "code": "SFO",
              "name": "San Francisco Office",
              "description": "",
              "address": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
              "attributes": {
                "year_built": "2005",
                "floor_count": 0,
                "room_count": 0,
                "gross_floor_area": 0,
                "net_room_area": 0
              }
            },
            {
              "id": "82478e3a-a212-41bf-9e2b-7522a1504a6b",
              "created": "2021-02-05T03:00:27+0000",
              "code": "SEA",
              "name": "Seattle Office",
              "description": "",
              "address": "032183ea-087d-43a6-94e8-5688ef909771",
              "attributes": {
                "year_built": "1945",
                "floor_count": 27,
                "room_count": 241,
                "gross_floor_area": 570000,
                "net_room_area": 570000
              }
            },
            {
              "id": "c1b5593a-6f59-46fa-ae38-15e4c4262ffa",
              "created": "2021-02-06T05:51:29+0000",
              "code": "AUS",
              "name": "Austin Office",
              "description": "",
              "address": "8aac0478-7b6f-448f-952b-dd710a94ee7a",
              "attributes": {
                "year_built": "1997",
                "floor_count": 2,
                "room_count": 36,
                "gross_floor_area": 18560,
                "net_room_area": 18000
              }
            }
          ]
        }
      },
      "Create-Site-Body": {
        "value": {
          "name": "Minneapolis Office",
          "year_built": "1927",
          "description": "Minneapolis branch office"
        }
      },
      "Site-Object": {
        "value": {
          "id": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "created": "2021-02-05T03:13:05+0000",
          "last_modified": null,
          "code": "MSP",
          "name": "Minneapolis Office",
          "description": "",
          "@address": "1fb555c1-c683-4254-820b-f6e7a7add74c",
          "contacts": null,
          "attributes": {
            "year_built": "",
            "floor_count": 0,
            "room_count": 0,
            "gross_floor_area": 0,
            "net_room_area": 0
          }
        }
      },
      "Floor-Object": {
        "value": {
          "id": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "created": "2021-04-12T17:08:59+0000",
          "last_modified": "2021-04-12T17:11:23+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "code": "Basement",
          "description": "Mechanical, building storage",
          "attributes": {
            "below_grade": true,
            "gross_floor_area": 16000,
            "room_count": 5,
            "net_room_area": 5480
          }
        }
      },
      "Create-Floor-Body": {
        "value": {
          "code": "Floor 1",
          "description": "First floor",
          "gross_floor_area": 18000,
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "below_grade": false
        }
      },
      "Floor-Object-List": {
        "value": {
          "count": 1,
          "data": [
            {
              "id": "d2fa3901-8649-46dc-bbfb-4864007895da",
              "created": "2021-04-10T18:58:46+0000",
              "site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
              "code": "Floor 1",
              "description": "",
              "attributes": {
                "below_grade": false,
                "gross_floor_area": 18000,
                "room_count": 0,
                "net_room_area": 0
              }
            }
          ]
        }
      },
      "Create-Room-Body": {
        "value": {
          "name": "Open Office",
          "number": "100",
          "description": "Open office & collaboration area",
          "area": 8900,
          "@floor": "d2fa3901-8649-46dc-bbfb-4864007895da",
          "occupancy": "B"
        }
      },
      "Room-Object": {
        "value": {
          "id": "61747b47-9828-4294-8602-8ef445e17240",
          "created": "2021-04-12T18:22:40+0000",
          "last_modified": "2021-04-12T18:54:18+0000",
          "@site": "0fa60c71-a611-418a-93a0-0bdf2dfa5ac3",
          "@floor": "38082b4a-6e6c-46ac-ba44-9de02d3323c0",
          "number": "1",
          "name": "Circulation",
          "description": "Hall area",
          "attributes": {
            "occupancy": "B",
            "area": 150
          }
        }
      },
      "Room-Object-List": {
        "value": {
          "description": "Example shared example",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "Address-Object": {
        "value": {
          "id": "6517a08a-ab53-4c23-b4c1-d685d8e25a1c",
          "created": "2021-02-05T16:10:54+0000",
          "last_modified": null,
          "@site": "723a9c16-1790-4386-b17b-54bc9ed6d901",
          "lines": [
            "600 Montgomery"
          ],
          "locality": "Downtown San Francisco",
          "city": "San Francisco",
          "county": "San Francisco",
          "state": "CA",
          "postcode": 94111,
          "country": "USA",
          "formatted": "600 Montgomery, San Francisco, CA 94111",
          "geolocation": {
            "latitude": 37.79513,
            "longitude": -122.40299
          },
          "timezone": "America/Los_Angeles",
          "designations": {
            "primary_mailing": false,
            "primary_billing": false
          }
        }
      },
      "Timezone-Object": {
        "value": {
          "id": "America/Los_Angeles",
          "effective_coordinates": [
            "37.79513",
            "-122.40299"
          ],
          "current": {
            "wall_time": "2021-04-13T06:59:36+0000",
            "utc_offset": -25200,
            "is_dst": false,
            "tag": "PDT"
          },
          "names": {
            "ISO6391_language_code": "en",
            "generic": "Pacific Time",
            "standard": "Pacific Standard Time",
            "daylight": "Pacific Daylight Time"
          }
        }
      }
    },
    "responses": {
      "404-Site-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site not found",
                    "console": "The site ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Floor-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not found",
                    "console": "The floor ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "404-Room-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Room not found",
                    "console": "The room ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Site-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site is not empty",
                    "console": "The site ID ... cannot be deleted while it contains floors. Delete the associated floorsand try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Floor-Not-Empty": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Floor not empty",
                    "console": "The floor ID ... cannot be deleted while it contains rooms. Delete the associated rooms and try again.",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Floor-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Floor-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor-Object"
              }
            }
          }
        }
      },
      "200-Room-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Room-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Room-Object"
              }
            }
          }
        }
      },
      "200-Site-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Site-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Site-Object"
              }
            }
          }
        }
      },
      "200-Address-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Address-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Address-Object"
              }
            }
          }
        }
      },
      "404-Address-Not-Found": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Address not found",
                    "console": "The address ID ... could not be found in the database",
                    "code": 404
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "400-Address-Already-Exists": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Site already has an address",
                    "console": "Update or delete the existing address",
                    "code": 400
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "409-No-Address-Geocoding": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Invalid Geocoding": {
                "value": {
                  "error": {
                    "message": "Invalid address geocoding",
                    "console": "The address ID ... is not geocoded and we have no coordinates to check",
                    "code": 409
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Get-Timezone-Object": {
        "description": "Ok",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Timezone-Object"
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Timezone-Object"
              }
            }
          }
        }
      },
      "409-Invalid-Weather-Parameters": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../models/Error-Response.v1.yaml"
            },
            "examples": {
              "Response": {
                "value": {
                  "error": {
                    "message": "Invalid parameter combination",
                    "console": "Parameters coordinates and address are mutually exclusive. Specify only one.",
                    "code": 409
                  },
                  "logging_hash": "..."
                }
              }
            }
          }
        }
      },
      "200-Site-Listing": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "description": "The number of site objects returned"
                },
                "index": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "An array of site objects",
                  "items": {
                    "$ref": "#/components/schemas/Site-Object"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Get-Site-List-Response"
              }
            }
          }
        }
      },
      "200-Floor-Listing": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number"
                },
                "index": {
                  "type": [
                    "string",
                    "array"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Floor-Object"
                  }
                }
              }
            },
            "examples": {
              "Response": {
                "$ref": "#/components/examples/Floor-Object-List"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Manage Sites"
    },
    {
      "name": "Addresses"
    },
    {
      "name": "Utilities"
    },
    {
      "name": "Buildings"
    },
    {
      "name": "Weather"
    }
  ]
}