openapi: 3.0.0
info:
  title: Users
  version: 1.1.1
  description: ''
servers:
  - url: 'https://api.counterbalance.io'
    description: Core API
paths:
  /v1/user:
    get:
      summary: Get User Listing
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  count:
                    type: number
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - license
                        - picture
                        - email
                        - site
                        - department
                        - title
                        - employee_id
                        - org_guid
                      properties:
                        id:
                          type: string
                          minLength: 1
                        license:
                          type: string
                          minLength: 1
                        flags:
                          type: object
                          properties:
                            active:
                              type: boolean
                            blocked:
                              type: boolean
                            licensed:
                              type: boolean
                            archived:
                              type: boolean
                            deleted:
                              type: boolean
                          required:
                            - active
                            - blocked
                            - licensed
                            - archived
                            - deleted
                        picture:
                          type: string
                          minLength: 1
                        name:
                          type: object
                          properties:
                            given:
                              type: string
                              minLength: 1
                            preferred:
                              type: string
                            middle:
                              type: string
                            family:
                              type: string
                              minLength: 1
                            prefix: {}
                            suffix: {}
                            full:
                              type: string
                              minLength: 1
                            display:
                              type: string
                              minLength: 1
                            short:
                              type: string
                          required:
                            - given
                            - preferred
                            - middle
                            - family
                            - full
                            - display
                            - short
                        email:
                          type: string
                          minLength: 1
                        site:
                          type: string
                          minLength: 1
                        department:
                          type: string
                          minLength: 1
                        manager: {}
                        room: {}
                        mail_stop: {}
                        title:
                          type: string
                          minLength: 1
                        employee_id:
                          type: string
                        org_guid:
                          type: string
                        links:
                          type: array
                          items:
                            required: []
                            properties: {}
                required:
                  - count
                  - data
              examples:
                Response:
                  value: {}
          headers: {}
      operationId: get-v1-user
    post:
      summary: Create a New User
      operationId: post-v1-user
      responses:
        '200':
          description: OK
      description: Create a new user and optionally assign a license and password
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                given_name:
                  type: string
                  minLength: 1
                  maxLength: 90
                  description: The user's first name
                family_name:
                  type: string
                  minLength: 1
                  maxLength: 90
                  description: The user's last name
                email:
                  type: string
                  format: email
                title:
                  type: string
                type:
                  type: string
                  enum:
                    - record_user
                    - seat
                    - user
                password:
                  type: string
                  format: password
                  description: Required for "seat" and "user" types
              required:
                - given_name
                - family_name
                - email
                - type
        description: Request body description...
  '/v1/user/{userId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: userId
        in: path
        required: true
        description: The UUID of the user to retrieve
    get:
      summary: Get User by ID
      tags: []
      responses: {}
      operationId: get-v1-user-userId
      parameters: []
      description: Retrieve a user account by ID
components:
  schemas:
    User-Account:
      description: ''
      type: object
      properties:
        id:
          type: string
          minLength: 1
        license:
          type: string
          minLength: 1
        flags:
          type: object
          required:
            - active
            - blocked
            - licensed
            - archived
            - deleted
          properties:
            active:
              type: boolean
            blocked:
              type: boolean
            licensed:
              type: boolean
            archived:
              type: boolean
            deleted:
              type: boolean
        picture:
          type: string
          minLength: 1
        auth: {}
        name:
          type: object
          required:
            - given
            - preferred
            - middle
            - family
            - full
            - display
            - short
          properties:
            given:
              type: string
              minLength: 1
            preferred:
              type: string
            middle:
              type: string
            family:
              type: string
              minLength: 1
            prefix: {}
            suffix: {}
            full:
              type: string
              minLength: 1
            display:
              type: string
              minLength: 1
            short:
              type: string
        email:
          type: string
          minLength: 1
        site:
          type: string
          minLength: 1
        department:
          type: string
          minLength: 1
        manager:
          type: string
          format: uuid
          default: 'null'
        room: {}
        mail_stop: {}
        title:
          type: string
          minLength: 1
        links:
          type: array
          items:
            type: object
        milestones:
          type: object
          required:
            - accepted_terms
            - completed_onboarding
            - account_created
            - account_blocked
            - account_archived
            - license_assigned
          properties:
            accepted_terms:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
            completed_onboarding:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
            account_created:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
            account_blocked:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
            account_archived:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
            license_assigned:
              type: object
              required:
                - status
                - timestamp
              properties:
                status:
                  type: boolean
                timestamp:
                  type: number
      required:
        - id
        - license
        - flags
        - picture
        - name
        - email
        - site
        - department
        - title
        - links
        - milestones
  securitySchemes:
    Bearer Token:
      type: http
      scheme: bearer
security:
  - Bearer Token: []
